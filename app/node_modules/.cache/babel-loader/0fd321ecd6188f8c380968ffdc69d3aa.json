{"ast":null,"code":"import _objectSpread from \"/Users/petarpenkov/Documents/fitness-fe-master/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport requestAgent from 'services/requestAgent';\nimport { handleSuccess, handleError } from './utils';\nimport { tokenHelper } from 'services/tokenHelpers'; // export default function getAccessToken() {\n//     let persist = localStorage.getItem('persist:coach');\n//     if (persist) {\n//         console.log(JSON.parse(JSON.parse(persist).auth));\n//         return JSON.parse(JSON.parse(persist).auth).data.response.data.access_token;\n//     } else {\n//         return false;\n//     }\n// }\n\nexport const PlainApiRequest = async API => {\n  let auth = tokenHelper.auth;\n  const responseData = await requestAgent.get(API, {\n    Authorization: auth\n  });\n\n  if (responseData.status === 200) {\n    return handleSuccess(responseData);\n  } else {\n    console.log('error');\n    return handleError(responseData.status, API, this);\n  }\n};\nexport const PostRequestWithData = async (API, data, headers) => {\n  let auth = tokenHelper.auth;\n  console.log(auth);\n  const responseData = await requestAgent.post(API, data, headers ? _objectSpread({}, headers, {\n    Authorization: auth\n  }) : {\n    Authorization: auth\n  });\n\n  if (responseData.status === 200) {\n    return handleSuccess(responseData);\n  } else {\n    console.log(responseData);\n    return handleError(responseData.status, API, this);\n  }\n};","map":{"version":3,"sources":["/Users/petarpenkov/Documents/fitness-fe-master/app/src/services/apiRequests/index.js"],"names":["requestAgent","handleSuccess","handleError","tokenHelper","PlainApiRequest","API","auth","responseData","get","Authorization","status","console","log","PostRequestWithData","data","headers","post"],"mappings":";AAAA,OAAOA,YAAP,MAAyB,uBAAzB;AACA,SAASC,aAAT,EAAwBC,WAAxB,QAA2C,SAA3C;AACA,SAASC,WAAT,QAA4B,uBAA5B,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,eAAe,GAAG,MAAMC,GAAN,IAAa;AACxC,MAAIC,IAAI,GAAGH,WAAW,CAACG,IAAvB;AACA,QAAMC,YAAY,GAAG,MAAMP,YAAY,CAACQ,GAAb,CAAiBH,GAAjB,EAAsB;AAC7CI,IAAAA,aAAa,EAAEH;AAD8B,GAAtB,CAA3B;;AAIA,MAAIC,YAAY,CAACG,MAAb,KAAwB,GAA5B,EAAiC;AAC7B,WAAOT,aAAa,CAACM,YAAD,CAApB;AACH,GAFD,MAEO;AACHI,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AAEA,WAAOV,WAAW,CAACK,YAAY,CAACG,MAAd,EAAsBL,GAAtB,EAA2B,IAA3B,CAAlB;AACH;AACJ,CAbM;AAeP,OAAO,MAAMQ,mBAAmB,GAAG,OAAOR,GAAP,EAAYS,IAAZ,EAAkBC,OAAlB,KAA8B;AAC7D,MAAIT,IAAI,GAAGH,WAAW,CAACG,IAAvB;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AAEA,QAAMC,YAAY,GAAG,MAAMP,YAAY,CAACgB,IAAb,CACvBX,GADuB,EAEvBS,IAFuB,EAGvBC,OAAO,qBAEMA,OAFN;AAGGN,IAAAA,aAAa,EAAEH;AAHlB,OAKD;AACIG,IAAAA,aAAa,EAAEH;AADnB,GARiB,CAA3B;;AAaA,MAAIC,YAAY,CAACG,MAAb,KAAwB,GAA5B,EAAiC;AAC7B,WAAOT,aAAa,CAACM,YAAD,CAApB;AACH,GAFD,MAEO;AACHI,IAAAA,OAAO,CAACC,GAAR,CAAYL,YAAZ;AAEA,WAAOL,WAAW,CAACK,YAAY,CAACG,MAAd,EAAsBL,GAAtB,EAA2B,IAA3B,CAAlB;AACH;AACJ,CAxBM","sourcesContent":["import requestAgent from 'services/requestAgent';\nimport { handleSuccess, handleError } from './utils';\nimport { tokenHelper } from 'services/tokenHelpers';\n// export default function getAccessToken() {\n//     let persist = localStorage.getItem('persist:coach');\n//     if (persist) {\n//         console.log(JSON.parse(JSON.parse(persist).auth));\n//         return JSON.parse(JSON.parse(persist).auth).data.response.data.access_token;\n//     } else {\n//         return false;\n//     }\n// }\n\nexport const PlainApiRequest = async API => {\n    let auth = tokenHelper.auth;\n    const responseData = await requestAgent.get(API, {\n        Authorization: auth,\n    });\n\n    if (responseData.status === 200) {\n        return handleSuccess(responseData);\n    } else {\n        console.log('error');\n\n        return handleError(responseData.status, API, this);\n    }\n};\n\nexport const PostRequestWithData = async (API, data, headers) => {\n    let auth = tokenHelper.auth;\n    console.log(auth);\n\n    const responseData = await requestAgent.post(\n        API,\n        data,\n        headers\n            ? {\n                  ...headers,\n                  Authorization: auth,\n              }\n            : {\n                  Authorization: auth,\n              }\n    );\n\n    if (responseData.status === 200) {\n        return handleSuccess(responseData);\n    } else {\n        console.log(responseData);\n\n        return handleError(responseData.status, API, this);\n    }\n};\n"]},"metadata":{},"sourceType":"module"}
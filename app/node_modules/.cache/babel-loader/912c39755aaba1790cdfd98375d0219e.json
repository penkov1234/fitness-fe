{"ast":null,"code":"import _slicedToArray from \"/Users/petarpenkov/Documents/fitness-fe-master/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/petarpenkov/Documents/fitness-fe-master/app/src/module/components/register/FirstStep.js\";\nimport React, { useState } from 'react';\nimport { View, Text } from 'react-native';\nimport { Button, TextField } from '@material-ui/core';\nimport Link from '@material-ui/core/Link';\nimport { passwordLoginAction, registerNextStepAction } from '../../../redux/actions/auth.actions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { stateIsLoaded } from '../../../services/stateHelpers';\nimport StandardButton from 'module/components/buttons/StandardButton';\nimport { headers, colors } from 'styles';\n\nconst styles = theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 200\n  },\n  cssLabel: {\n    color: 'green'\n  },\n  cssOutlinedInput: {\n    '&$cssFocused $notchedOutline': {\n      borderColor: `${theme.palette.primary.main} !important`\n    }\n  },\n  cssFocused: {},\n  notchedOutline: {\n    borderWidth: '1px',\n    borderColor: 'green !important'\n  }\n});\n\nexport default function FirstStep({\n  history\n}) {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        username = _useState2[0],\n        setUsername = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        password = _useState4[0],\n        setPassword = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        repeatPassword = _useState6[0],\n        setRepeatPassword = _useState6[1];\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        usernameError = _useState8[0],\n        setUsernameError = _useState8[1];\n\n  const _useState9 = useState(false),\n        _useState10 = _slicedToArray(_useState9, 2),\n        passwordError = _useState10[0],\n        setPasswordError = _useState10[1];\n\n  const _useState11 = useState(false),\n        _useState12 = _slicedToArray(_useState11, 2),\n        repeatPasswordError = _useState12[0],\n        setRepeatPasswordError = _useState12[1];\n\n  const _useState13 = useState(''),\n        _useState14 = _slicedToArray(_useState13, 2),\n        usernameErrorMessage = _useState14[0],\n        setUsernameErrorMessage = _useState14[1];\n\n  const _useState15 = useState(''),\n        _useState16 = _slicedToArray(_useState15, 2),\n        passwordErrorMessage = _useState16[0],\n        setPasswordErrorMessage = _useState16[1];\n\n  const _useState17 = useState(''),\n        _useState18 = _slicedToArray(_useState17, 2),\n        repeatPasswordErrorMessage = _useState18[0],\n        setRepeatPasswordErrorMessage = _useState18[1];\n\n  const firstStepState = useSelector(state => state.register.firstStepData);\n  console.log(firstStepState);\n\n  if (stateIsLoaded(firstStepState)) {\n    if (!username && !password) {\n      setUsername(firstStepState.data.data.username);\n      setPassword(firstStepState.data.data.password);\n    }\n  }\n\n  const dispatch = useDispatch();\n\n  const toNextStep = () => {\n    if (!username.length) {\n      setUsernameError(true);\n      setUsernameErrorMessage('username cannot be empty');\n    } else if (!password.length) {\n      setPasswordError(true);\n      setPasswordErrorMessage('password cannot be empty');\n    } else if (password !== repeatPassword) {\n      setRepeatPasswordError(true);\n      setRepeatPasswordErrorMessage(\"the passwords don't match\");\n    } else {\n      dispatch(registerNextStepAction({\n        username: username,\n        password: password\n      }));\n    }\n  };\n\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    name: 'username',\n    variant: \"outlined\",\n    label: 'Username',\n    color: 'secondary',\n    error: usernameError,\n    helperText: usernameErrorMessage,\n    onChange: event => setUsername(event.target.value),\n    value: username,\n    style: {\n      marginTop: 30,\n      marginLeft: 20,\n      marginRight: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    name: 'password',\n    variant: \"outlined\",\n    label: 'Password',\n    color: 'secondary',\n    error: passwordError,\n    type: 'password',\n    helperText: passwordErrorMessage,\n    onChange: event => setPassword(event.target.value),\n    value: password,\n    style: {\n      marginTop: 30,\n      marginLeft: 20,\n      marginRight: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    name: 'repeatPassword',\n    variant: \"outlined\",\n    label: 'Repeat password',\n    color: 'secondary',\n    type: 'password',\n    error: repeatPasswordError,\n    helperText: repeatPasswordErrorMessage,\n    onChange: event => setRepeatPassword(event.target.value),\n    value: repeatPassword,\n    style: {\n      marginTop: 30,\n      marginLeft: 20,\n      marginRight: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }), React.createElement(Link, {\n    to: '/register',\n    style: {\n      fontSize: 13,\n      color: '#999999',\n      textAlign: 'center',\n      marginTop: 30\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(Text, {\n    style: [headers.H6()],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \" Already have an acoount? Click here to log in. \")), React.createElement(StandardButton, {\n    title: 'Next step' // disabled={}\n    ,\n    color: '#E4365E',\n    style: {\n      alignSelf: 'flex-end',\n      marginTop: 20,\n      padding: 10,\n      paddingLeft: 20,\n      paddingRight: 20 // backgroundColor: colors.themePrimary(),\n\n    },\n    onPress: () => toNextStep(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/petarpenkov/Documents/fitness-fe-master/app/src/module/components/register/FirstStep.js"],"names":["React","useState","View","Text","Button","TextField","Link","passwordLoginAction","registerNextStepAction","useDispatch","useSelector","stateIsLoaded","StandardButton","headers","colors","styles","theme","container","display","flexWrap","textField","marginLeft","spacing","unit","marginRight","width","cssLabel","color","cssOutlinedInput","borderColor","palette","primary","main","cssFocused","notchedOutline","borderWidth","FirstStep","history","username","setUsername","password","setPassword","repeatPassword","setRepeatPassword","usernameError","setUsernameError","passwordError","setPasswordError","repeatPasswordError","setRepeatPasswordError","usernameErrorMessage","setUsernameErrorMessage","passwordErrorMessage","setPasswordErrorMessage","repeatPasswordErrorMessage","setRepeatPasswordErrorMessage","firstStepState","state","register","firstStepData","console","log","data","dispatch","toNextStep","length","event","target","value","marginTop","fontSize","textAlign","H6","alignSelf","padding","paddingLeft","paddingRight"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { View, Text } from 'react-native';\nimport { Button, TextField } from '@material-ui/core';\nimport Link from '@material-ui/core/Link';\nimport { passwordLoginAction, registerNextStepAction } from '../../../redux/actions/auth.actions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { stateIsLoaded } from '../../../services/stateHelpers';\nimport StandardButton from 'module/components/buttons/StandardButton';\nimport { headers, colors } from 'styles';\n\nconst styles = theme => ({\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    textField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        width: 200,\n    },\n\n    cssLabel: {\n        color: 'green',\n    },\n\n    cssOutlinedInput: {\n        '&$cssFocused $notchedOutline': {\n            borderColor: `${theme.palette.primary.main} !important`,\n        },\n    },\n\n    cssFocused: {},\n\n    notchedOutline: {\n        borderWidth: '1px',\n        borderColor: 'green !important',\n    },\n});\n\nexport default function FirstStep({ history }) {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [repeatPassword, setRepeatPassword] = useState('');\n    const [usernameError, setUsernameError] = useState(false);\n    const [passwordError, setPasswordError] = useState(false);\n    const [repeatPasswordError, setRepeatPasswordError] = useState(false);\n    const [usernameErrorMessage, setUsernameErrorMessage] = useState('');\n    const [passwordErrorMessage, setPasswordErrorMessage] = useState('');\n    const [repeatPasswordErrorMessage, setRepeatPasswordErrorMessage] = useState('');\n    const firstStepState = useSelector(state => state.register.firstStepData);\n    console.log(firstStepState);\n    if (stateIsLoaded(firstStepState)) {\n        if (!username && !password) {\n            setUsername(firstStepState.data.data.username);\n            setPassword(firstStepState.data.data.password);\n        }\n    }\n    const dispatch = useDispatch();\n    const toNextStep = () => {\n        if (!username.length) {\n            setUsernameError(true);\n            setUsernameErrorMessage('username cannot be empty');\n        } else if (!password.length) {\n            setPasswordError(true);\n            setPasswordErrorMessage('password cannot be empty');\n        } else if (password !== repeatPassword) {\n            setRepeatPasswordError(true);\n            setRepeatPasswordErrorMessage(\"the passwords don't match\");\n        } else {\n            dispatch(registerNextStepAction({ username: username, password: password }));\n        }\n    };\n\n    return (\n        <View>\n            <TextField\n                name={'username'}\n                variant=\"outlined\"\n                label={'Username'}\n                color={'secondary'}\n                error={usernameError}\n                helperText={usernameErrorMessage}\n                onChange={event => setUsername(event.target.value)}\n                value={username}\n                style={{ marginTop: 30, marginLeft: 20, marginRight: 20 }}\n            ></TextField>\n            <TextField\n                name={'password'}\n                variant=\"outlined\"\n                label={'Password'}\n                color={'secondary'}\n                error={passwordError}\n                type={'password'}\n                helperText={passwordErrorMessage}\n                onChange={event => setPassword(event.target.value)}\n                value={password}\n                style={{ marginTop: 30, marginLeft: 20, marginRight: 20 }}\n            ></TextField>\n            <TextField\n                name={'repeatPassword'}\n                variant=\"outlined\"\n                label={'Repeat password'}\n                color={'secondary'}\n                type={'password'}\n                error={repeatPasswordError}\n                helperText={repeatPasswordErrorMessage}\n                onChange={event => setRepeatPassword(event.target.value)}\n                value={repeatPassword}\n                style={{ marginTop: 30, marginLeft: 20, marginRight: 20 }}\n            ></TextField>\n            <Link to={'/register'} style={{ fontSize: 13, color: '#999999', textAlign: 'center', marginTop: 30 }}>\n                <Text style={[headers.H6()]}> Already have an acoount? Click here to log in. </Text>\n            </Link>\n            <StandardButton\n                title={'Next step'}\n                // disabled={}\n                color={'#E4365E'}\n                style={{\n                    alignSelf: 'flex-end',\n                    marginTop: 20,\n                    padding: 10,\n                    paddingLeft: 20,\n                    paddingRight: 20,\n                    // backgroundColor: colors.themePrimary(),\n                }}\n                onPress={() => toNextStep()}\n            ></StandardButton>\n        </View>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}
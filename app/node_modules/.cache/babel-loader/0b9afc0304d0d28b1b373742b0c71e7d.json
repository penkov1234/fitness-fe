{"ast":null,"code":"import requestAgent from 'services/requestAgent';\nimport { handleSuccess, handleError } from './utils';\nimport { LOGIN_API } from 'services/api';\nimport { tokenHelper } from 'services/tokenHelpers';\nexport const loginApiRequest = async (email, password) => {\n  try {\n    const responseData = await requestAgent.post(LOGIN_API, {}, {\n      Authorization: 'Basic ' + btoa(email + ':' + password),\n      'Content-Type': 'application/x-www-form-urlencoded'\n    }); // console.log(responseData);\n\n    return handleSuccess(responseData);\n  } catch (e) {\n    return handleError();\n  }\n};\nexport const refreshTokenRequest = async () => {\n  let data = new FormData();\n  let refreshToken = tokenHelper.refreshToken;\n\n  if (refreshToken) {\n    data.set('refresh_token', refreshToken);\n    const responseData = await requestAgent.post(LOGIN_API + '?grant_type=refresh_token', data, {\n      Authorization: 'Basic ' + btoa('ClientId' + ':' + 'secret'),\n      'Content-Type': 'application/x-www-form-urlencoded'\n    });\n\n    if (responseData.status === 200) {\n      return handleSuccess(responseData);\n    }\n  }\n\n  return handleError();\n};","map":{"version":3,"sources":["/Users/petarpenkov/Documents/fitness-fe-master/app/src/services/apiRequests/login.js"],"names":["requestAgent","handleSuccess","handleError","LOGIN_API","tokenHelper","loginApiRequest","email","password","responseData","post","Authorization","btoa","e","refreshTokenRequest","data","FormData","refreshToken","set","status"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,uBAAzB;AACA,SAASC,aAAT,EAAwBC,WAAxB,QAA2C,SAA3C;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAASC,WAAT,QAA4B,uBAA5B;AAEA,OAAO,MAAMC,eAAe,GAAG,OAAOC,KAAP,EAAcC,QAAd,KAA2B;AACtD,MAAI;AACA,UAAMC,YAAY,GAAG,MAAMR,YAAY,CAACS,IAAb,CACvBN,SADuB,EAEvB,EAFuB,EAGvB;AACIO,MAAAA,aAAa,EAAE,WAAWC,IAAI,CAACL,KAAK,GAAG,GAAR,GAAcC,QAAf,CADlC;AAEI,sBAAgB;AAFpB,KAHuB,CAA3B,CADA,CASA;;AACA,WAAON,aAAa,CAACO,YAAD,CAApB;AACH,GAXD,CAWE,OAAOI,CAAP,EAAU;AACR,WAAOV,WAAW,EAAlB;AACH;AACJ,CAfM;AAiBP,OAAO,MAAMW,mBAAmB,GAAG,YAAY;AAC3C,MAAIC,IAAI,GAAG,IAAIC,QAAJ,EAAX;AACA,MAAIC,YAAY,GAAGZ,WAAW,CAACY,YAA/B;;AACA,MAAIA,YAAJ,EAAkB;AACdF,IAAAA,IAAI,CAACG,GAAL,CAAS,eAAT,EAA0BD,YAA1B;AAEA,UAAMR,YAAY,GAAG,MAAMR,YAAY,CAACS,IAAb,CAAkBN,SAAS,GAAG,2BAA9B,EAA2DW,IAA3D,EAAiE;AACxFJ,MAAAA,aAAa,EAAE,WAAWC,IAAI,CAAC,aAAa,GAAb,GAAmB,QAApB,CAD0D;AAExF,sBAAgB;AAFwE,KAAjE,CAA3B;;AAKA,QAAIH,YAAY,CAACU,MAAb,KAAwB,GAA5B,EAAiC;AAC7B,aAAOjB,aAAa,CAACO,YAAD,CAApB;AACH;AACJ;;AACD,SAAON,WAAW,EAAlB;AACH,CAhBM","sourcesContent":["import requestAgent from 'services/requestAgent';\nimport { handleSuccess, handleError } from './utils';\nimport { LOGIN_API } from 'services/api';\nimport { tokenHelper } from 'services/tokenHelpers';\n\nexport const loginApiRequest = async (email, password) => {\n    try {\n        const responseData = await requestAgent.post(\n            LOGIN_API,\n            {},\n            {\n                Authorization: 'Basic ' + btoa(email + ':' + password),\n                'Content-Type': 'application/x-www-form-urlencoded',\n            }\n        );\n        // console.log(responseData);\n        return handleSuccess(responseData);\n    } catch (e) {\n        return handleError();\n    }\n};\n\nexport const refreshTokenRequest = async () => {\n    let data = new FormData();\n    let refreshToken = tokenHelper.refreshToken;\n    if (refreshToken) {\n        data.set('refresh_token', refreshToken);\n\n        const responseData = await requestAgent.post(LOGIN_API + '?grant_type=refresh_token', data, {\n            Authorization: 'Basic ' + btoa('ClientId' + ':' + 'secret'),\n            'Content-Type': 'application/x-www-form-urlencoded',\n        });\n\n        if (responseData.status === 200) {\n            return handleSuccess(responseData);\n        }\n    }\n    return handleError();\n};\n"]},"metadata":{},"sourceType":"module"}
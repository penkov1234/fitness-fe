{"ast":null,"code":"export const tokenHelper = {\n  get auth() {\n    let persist = localStorage.getItem('persist:fitness');\n\n    if (persist) {\n      try {\n        let access_token = JSON.parse(JSON.parse(persist).auth).data.auth;\n        return access_token;\n      } catch {\n        return false;\n      }\n    } else {\n      return false;\n    }\n  },\n\n  get refreshToken() {\n    let persist = localStorage.getItem('persist:coach');\n\n    if (persist) {\n      try {\n        let refresh_token = JSON.parse(JSON.parse(persist).auth).data.data.refresh_token;\n        return refresh_token;\n      } catch {\n        return false;\n      }\n    } else {\n      return false;\n    }\n  },\n\n  get isAccessTokenExpired() {\n    let persist = localStorage.getItem('persist:coach');\n\n    if (persist) {\n      try {\n        let data = JSON.parse(JSON.parse(persist).auth).data.data; // console.log(data);\n\n        let expires_in = data.expires_in;\n        let token_creation = data.token_creation;\n        let date_now = Date.now();\n        return (date_now - token_creation) / 1000 + 500 > expires_in;\n      } catch (message) {\n        console.warn('Catch exception parsing persist:coach', message);\n        return false;\n      }\n    } else {\n      return false;\n    }\n  },\n\n  sendTokenToUnity() {\n    let token = this.auth;\n\n    if (token) {\n      window.location.href = `uniwebview://Auth?auth=${token}`;\n    }\n\n    return token;\n  }\n\n};","map":{"version":3,"sources":["/Users/petarpenkov/Documents/fitness-fe-master/app/src/services/tokenHelpers.js"],"names":["tokenHelper","auth","persist","localStorage","getItem","access_token","JSON","parse","data","refreshToken","refresh_token","isAccessTokenExpired","expires_in","token_creation","date_now","Date","now","message","console","warn","sendTokenToUnity","token","window","location","href"],"mappings":"AAAA,OAAO,MAAMA,WAAW,GAAG;AACvB,MAAIC,IAAJ,GAAW;AACP,QAAIC,OAAO,GAAGC,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAd;;AACA,QAAIF,OAAJ,EAAa;AACT,UAAI;AACA,YAAIG,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACC,KAAL,CAAWL,OAAX,EAAoBD,IAA/B,EAAqCO,IAArC,CAA0CP,IAA7D;AACA,eAAOI,YAAP;AACH,OAHD,CAGE,MAAM;AACJ,eAAO,KAAP;AACH;AACJ,KAPD,MAOO;AACH,aAAO,KAAP;AACH;AACJ,GAbsB;;AAcvB,MAAII,YAAJ,GAAmB;AACf,QAAIP,OAAO,GAAGC,YAAY,CAACC,OAAb,CAAqB,eAArB,CAAd;;AACA,QAAIF,OAAJ,EAAa;AACT,UAAI;AACA,YAAIQ,aAAa,GAAGJ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACC,KAAL,CAAWL,OAAX,EAAoBD,IAA/B,EAAqCO,IAArC,CAA0CA,IAA1C,CAA+CE,aAAnE;AACA,eAAOA,aAAP;AACH,OAHD,CAGE,MAAM;AACJ,eAAO,KAAP;AACH;AACJ,KAPD,MAOO;AACH,aAAO,KAAP;AACH;AACJ,GA1BsB;;AA2BvB,MAAIC,oBAAJ,GAA2B;AACvB,QAAIT,OAAO,GAAGC,YAAY,CAACC,OAAb,CAAqB,eAArB,CAAd;;AACA,QAAIF,OAAJ,EAAa;AACT,UAAI;AACA,YAAIM,IAAI,GAAGF,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACC,KAAL,CAAWL,OAAX,EAAoBD,IAA/B,EAAqCO,IAArC,CAA0CA,IAArD,CADA,CAEA;;AACA,YAAII,UAAU,GAAGJ,IAAI,CAACI,UAAtB;AAEA,YAAIC,cAAc,GAAGL,IAAI,CAACK,cAA1B;AACA,YAAIC,QAAQ,GAAGC,IAAI,CAACC,GAAL,EAAf;AAEA,eAAO,CAACF,QAAQ,GAAGD,cAAZ,IAA8B,IAA9B,GAAqC,GAArC,GAA2CD,UAAlD;AACH,OATD,CASE,OAAOK,OAAP,EAAgB;AACdC,QAAAA,OAAO,CAACC,IAAR,CAAa,uCAAb,EAAsDF,OAAtD;AACA,eAAO,KAAP;AACH;AACJ,KAdD,MAcO;AACH,aAAO,KAAP;AACH;AACJ,GA9CsB;;AA+CvBG,EAAAA,gBAAgB,GAAG;AACf,QAAIC,KAAK,GAAG,KAAKpB,IAAjB;;AACA,QAAIoB,KAAJ,EAAW;AACPC,MAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAwB,0BAAyBH,KAAM,EAAvD;AACH;;AACD,WAAOA,KAAP;AACH;;AArDsB,CAApB","sourcesContent":["export const tokenHelper = {\n    get auth() {\n        let persist = localStorage.getItem('persist:fitness');\n        if (persist) {\n            try {\n                let access_token = JSON.parse(JSON.parse(persist).auth).data.auth;\n                return access_token;\n            } catch {\n                return false;\n            }\n        } else {\n            return false;\n        }\n    },\n    get refreshToken() {\n        let persist = localStorage.getItem('persist:coach');\n        if (persist) {\n            try {\n                let refresh_token = JSON.parse(JSON.parse(persist).auth).data.data.refresh_token;\n                return refresh_token;\n            } catch {\n                return false;\n            }\n        } else {\n            return false;\n        }\n    },\n    get isAccessTokenExpired() {\n        let persist = localStorage.getItem('persist:coach');\n        if (persist) {\n            try {\n                let data = JSON.parse(JSON.parse(persist).auth).data.data;\n                // console.log(data);\n                let expires_in = data.expires_in;\n\n                let token_creation = data.token_creation;\n                let date_now = Date.now();\n\n                return (date_now - token_creation) / 1000 + 500 > expires_in;\n            } catch (message) {\n                console.warn('Catch exception parsing persist:coach', message);\n                return false;\n            }\n        } else {\n            return false;\n        }\n    },\n    sendTokenToUnity() {\n        let token = this.auth;\n        if (token) {\n            window.location.href = `uniwebview://Auth?auth=${token}`;\n        }\n        return token;\n    },\n};\n"]},"metadata":{},"sourceType":"module"}
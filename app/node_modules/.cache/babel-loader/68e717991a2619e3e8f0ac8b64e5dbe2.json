{"ast":null,"code":"import _objectSpread from \"/Users/petarpenkov/Documents/fitness-fe-master/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/petarpenkov/Documents/fitness-fe-master/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/petarpenkov/Documents/fitness-fe-master/app/src/module/screens/LoginScreen.js\";\nimport React, { useState } from 'react';\nimport { View, Text } from 'react-native';\nimport { colors } from 'styles';\nimport { Button, TextField } from '@material-ui/core';\nimport Link from '@material-ui/core/Link';\nimport { ImageBackground } from 'react-native-web';\nimport Background from 'assets/haramara yoga shared.jpg';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { passwordLoginAction, registerStartedAction } from '../../redux/actions/auth.actions';\nimport { stateHasFailed, stateIsLoaded } from '../../services/stateHelpers';\nimport StandardButton from 'module/components/buttons/StandardButton';\nimport { Redirect } from 'react-router-dom';\nimport { headers } from 'styles';\nimport { getUserInfo } from '../../redux/actions/data.actions';\nexport default function LoginScreen({\n  history\n}) {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        username = _useState2[0],\n        setUsername = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        password = _useState4[0],\n        setPassword = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        usernameError = _useState6[0],\n        setUsernameError = _useState6[1];\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        passwordError = _useState8[0],\n        setPasswordError = _useState8[1];\n\n  const _useState9 = useState(''),\n        _useState10 = _slicedToArray(_useState9, 2),\n        usernameErrorMessage = _useState10[0],\n        setUsernameErrorMessage = _useState10[1];\n\n  const _useState11 = useState(''),\n        _useState12 = _slicedToArray(_useState11, 2),\n        passwordErrorMessage = _useState12[0],\n        setPasswordErrorMessage = _useState12[1];\n\n  const dispatch = useDispatch();\n  const authState = useSelector(state => state.auth);\n\n  const login = () => {\n    if (!username.length) {\n      setUsernameError(true);\n      setUsernameErrorMessage('username cannot be empty');\n    }\n\n    if (!password.length) {\n      setPasswordError(true);\n      setPasswordErrorMessage('password cannot be empty');\n    } else {\n      setPasswordError(false);\n      setUsernameError(false);\n      dispatch(passwordLoginAction(username, password));\n    }\n  };\n\n  const toRegister = () => {\n    history.push('/register');\n  };\n\n  if (stateIsLoaded(authState) && authState.persisted) {\n    history.replace('/menu');\n  }\n\n  if (stateHasFailed(authState)) {\n    if (!usernameError) {\n      setUsernameError(true);\n      setUsernameErrorMessage('invalid credentials');\n    }\n\n    if (!passwordError) {\n      setPasswordError(true);\n      setPasswordErrorMessage('invalid credentials');\n    }\n  }\n\n  return React.createElement(ImageBackground, {\n    source: Background,\n    imageStyle: {\n      opacity: '60%'\n    },\n    style: {\n      flex: 1,\n      flexDirection: 'row',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(View, {\n    style: {\n      width: 400,\n      padding: 20,\n      backgroundColor: '#FFFFFF',\n      boxShadow: '-10px 12px 15px -1px' + ' rgba(0,0,0,0.4)'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(Text, {\n    style: [headers.H1('black'), {\n      textAlign: 'center',\n      borderBottomWidth: 1,\n      borderBottomColor: colors.borderGrayColor(50),\n      paddingBottom: 20\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Login to continue\"), React.createElement(TextField, {\n    name: 'username',\n    variant: \"outlined\",\n    label: 'Username',\n    color: 'secondary',\n    error: usernameError,\n    helperText: usernameErrorMessage,\n    onChange: event => setUsername(event.target.value),\n    value: username,\n    style: _objectSpread({\n      marginTop: 40,\n      marginLeft: 20,\n      marginRight: 20\n    }, headers.H5()),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    name: 'password',\n    variant: \"outlined\",\n    label: 'Password',\n    color: 'secondary',\n    type: 'password',\n    error: passwordError,\n    helperText: passwordErrorMessage,\n    onChange: event => setPassword(event.target.value),\n    value: password,\n    style: {\n      marginTop: 30,\n      marginLeft: 20,\n      marginRight: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), React.createElement(Link, {\n    onClick: toRegister,\n    style: _objectSpread({\n      fontSize: 13,\n      textAlign: 'center',\n      marginTop: 30\n    }, headers.H5()),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"Not registered yet? Click \", React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"here to register\"), \".\"), React.createElement(StandardButton, {\n    variant: \"contained\",\n    title: 'Login',\n    style: {\n      alignSelf: 'flex-end',\n      marginTop: 20,\n      backgroundColor: colors.themeActive(),\n      padding: 10,\n      paddingRight: 20,\n      paddingLeft: 20\n    },\n    onPress: () => {\n      login();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["/Users/petarpenkov/Documents/fitness-fe-master/app/src/module/screens/LoginScreen.js"],"names":["React","useState","View","Text","colors","Button","TextField","Link","ImageBackground","Background","useDispatch","useSelector","passwordLoginAction","registerStartedAction","stateHasFailed","stateIsLoaded","StandardButton","Redirect","headers","getUserInfo","LoginScreen","history","username","setUsername","password","setPassword","usernameError","setUsernameError","passwordError","setPasswordError","usernameErrorMessage","setUsernameErrorMessage","passwordErrorMessage","setPasswordErrorMessage","dispatch","authState","state","auth","login","length","toRegister","push","persisted","replace","opacity","flex","flexDirection","alignItems","justifyContent","width","padding","backgroundColor","boxShadow","H1","textAlign","borderBottomWidth","borderBottomColor","borderGrayColor","paddingBottom","event","target","value","marginTop","marginLeft","marginRight","H5","fontSize","alignSelf","themeActive","paddingRight","paddingLeft"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { View, Text } from 'react-native';\nimport { colors } from 'styles';\nimport { Button, TextField } from '@material-ui/core';\nimport Link from '@material-ui/core/Link';\nimport { ImageBackground } from 'react-native-web';\nimport Background from 'assets/haramara yoga shared.jpg';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { passwordLoginAction, registerStartedAction } from '../../redux/actions/auth.actions';\nimport { stateHasFailed, stateIsLoaded } from '../../services/stateHelpers';\nimport StandardButton from 'module/components/buttons/StandardButton';\nimport { Redirect } from 'react-router-dom';\nimport { headers } from 'styles';\nimport { getUserInfo } from '../../redux/actions/data.actions';\nexport default function LoginScreen({ history }) {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [usernameError, setUsernameError] = useState(false);\n    const [passwordError, setPasswordError] = useState(false);\n    const [usernameErrorMessage, setUsernameErrorMessage] = useState('');\n    const [passwordErrorMessage, setPasswordErrorMessage] = useState('');\n    const dispatch = useDispatch();\n    const authState = useSelector(state => state.auth);\n\n    const login = () => {\n        if (!username.length) {\n            setUsernameError(true);\n            setUsernameErrorMessage('username cannot be empty');\n        }\n        if (!password.length) {\n            setPasswordError(true);\n            setPasswordErrorMessage('password cannot be empty');\n        } else {\n            setPasswordError(false);\n            setUsernameError(false);\n            dispatch(passwordLoginAction(username, password));\n        }\n    };\n\n    const toRegister = () => {\n        history.push('/register');\n    };\n\n    if (stateIsLoaded(authState) && authState.persisted) {\n        history.replace('/menu');\n    }\n    if (stateHasFailed(authState)) {\n        if (!usernameError) {\n            setUsernameError(true);\n            setUsernameErrorMessage('invalid credentials');\n        }\n        if (!passwordError) {\n            setPasswordError(true);\n            setPasswordErrorMessage('invalid credentials');\n        }\n    }\n    return (\n        <ImageBackground\n            source={Background}\n            imageStyle={{ opacity: '60%' }}\n            style={{ flex: 1, flexDirection: 'row', alignItems: 'center', justifyContent: 'center' }}\n        >\n            <View style={{ width: 400, padding: 20, backgroundColor: '#FFFFFF', boxShadow: '-10px 12px 15px -1px' + ' rgba(0,0,0,0.4)' }}>\n                <Text\n                    style={[\n                        headers.H1('black'),\n                        { textAlign: 'center', borderBottomWidth: 1, borderBottomColor: colors.borderGrayColor(50), paddingBottom: 20 },\n                    ]}\n                >\n                    Login to continue\n                </Text>\n                <TextField\n                    name={'username'}\n                    variant=\"outlined\"\n                    label={'Username'}\n                    color={'secondary'}\n                    error={usernameError}\n                    helperText={usernameErrorMessage}\n                    onChange={event => setUsername(event.target.value)}\n                    value={username}\n                    style={{ marginTop: 40, marginLeft: 20, marginRight: 20, ...headers.H5() }}\n                ></TextField>\n                <TextField\n                    name={'password'}\n                    variant=\"outlined\"\n                    label={'Password'}\n                    color={'secondary'}\n                    type={'password'}\n                    error={passwordError}\n                    helperText={passwordErrorMessage}\n                    onChange={event => setPassword(event.target.value)}\n                    value={password}\n                    style={{ marginTop: 30, marginLeft: 20, marginRight: 20 }}\n                ></TextField>\n                <Link onClick={toRegister} style={{ fontSize: 13, textAlign: 'center', marginTop: 30, ...headers.H5() }}>\n                    Not registered yet? Click <Text>here to register</Text>.\n                </Link>\n                <StandardButton\n                    variant=\"contained\"\n                    title={'Login'}\n                    style={{\n                        alignSelf: 'flex-end',\n                        marginTop: 20,\n                        backgroundColor: colors.themeActive(),\n                        padding: 10,\n                        paddingRight: 20,\n                        paddingLeft: 20,\n                    }}\n                    onPress={() => {\n                        login();\n                    }}\n                ></StandardButton>\n            </View>\n        </ImageBackground>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"/Users/petarpenkov/Documents/fitness-fe-master/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/petarpenkov/Documents/fitness-fe-master/app/src/module/screens/CalendarScreen.js\";\nimport React, { useState, useEffect } from 'react';\nimport { View, Text, SafeAreaView, ScrollView } from 'react-native';\nimport { colors } from 'styles';\nimport CalendarDay from 'module/components/CalendarDay';\nimport Calendar from 'module/components/Calendar';\nimport { Button } from '@material-ui/core';\nimport WhiteOutlinedButton from 'module/components/buttons/WhiteOutlinedButton';\nimport StandardButton from 'module/components/buttons/StandardButton';\nimport CreateWorkoutModal from 'module/components/modals/CreateWorkoutModal';\nimport { getAllExercises } from 'redux/actions/data.actions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ChooseWorkoutModal from 'module/components/modals/ChooseWorkoutModal';\nimport DetailsModal from 'module/components/modals/DetailsModal';\nimport { headers, basicStyles } from 'styles';\nimport { setFetchCalendar } from 'redux/actions/vars.actions';\nimport { getAllWorkoutsFiltered, getSubscribedWorkout, getUserInfo, subscribeToWorkout } from '../../redux/actions/data.actions';\nimport { stateIsLoaded } from '../../services/stateHelpers';\nimport LegendComponent from 'module/components/LegendComponent';\nexport default function CalendarScreen({\n  history\n}) {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        createWorkoutModalOpen = _useState2[0],\n        setCreateWorkoutModalOpen = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        chooseWorkoutModalOpen = _useState4[0],\n        setChooseWorkoutModalOpen = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        detailsModal = _useState6[0],\n        setDetailsModal = _useState6[1];\n\n  const _useState7 = useState({}),\n        _useState8 = _slicedToArray(_useState7, 2),\n        detailsPropObj = _useState8[0],\n        setDetailsPropObj = _useState8[1];\n\n  const allExercises = useSelector(state => state.allExercises);\n  const fetchCalendar = useSelector(state => state.globalVars.data.fetchCalendar);\n  const dispatch = useDispatch(); // const []\n\n  const workoutSubscribed = useSelector(state => state.workoutsSubscribed.data);\n  const userDetails = useSelector(state => state.workoutsSubscribed.data);\n  useEffect(() => {\n    // console.log('fetch calendar', fetchCalendar);\n    if (fetchCalendar) {\n      dispatch(getSubscribedWorkout());\n      dispatch(setFetchCalendar(false));\n    }\n  }, [fetchCalendar]); // getAllExercises;\n\n  useEffect(() => {\n    dispatch(getAllExercises()); // dispatch(subscribeToWorkout(2));\n    // dispatch(getAllWorkoutsFiltered(3, 'hard'));\n  }, []);\n  useEffect(() => {\n    dispatch(getUserInfo());\n  }, []);\n\n  function onChangeMonth(month, year) {\n    dispatch(getSubscribedWorkout(month, year));\n  }\n\n  return React.createElement(SafeAreaView, {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(ScrollView, {\n    style: [basicStyles.scrollView],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      padding: 90,\n      paddingBottom: 0,\n      paddingTop: 40\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'flex-end',\n      paddingLeft: 30\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(Text, {\n    style: [headers.H2(colors.secoundaryText(), 'Light'), {\n      marginBottom: 12\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Workout plan\"), workoutSubscribed.name && React.createElement(Text, {\n    style: [headers.H1(colors.primaryText(), 'Light')],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, workoutSubscribed.name, \" \"), !workoutSubscribed.name && React.createElement(Text, {\n    style: [headers.H3(colors.primaryText(), 'Light')],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"You have not yet subscribed to any of the workout plans for this month!\", ' ')), React.createElement(View, {\n    style: {\n      alignSelf: 'flex-end'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(StandardButton, {\n    hasShadow: true,\n    title: 'Create workout',\n    color: colors.themeActive(),\n    titleStyle: headers.H5('white', 'Black-Cond'),\n    style: {\n      borderRadius: 5,\n      paddingLeft: 40,\n      paddingRight: 40,\n      paddingTop: 12,\n      paddingBottom: 12,\n      marginBottom: 15\n    },\n    onPress: () => setCreateWorkoutModalOpen(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), React.createElement(StandardButton, {\n    hasShadow: true,\n    title: 'Choose workout',\n    color: colors.themeActive(),\n    titleStyle: headers.H5('white', 'Black-Cond'),\n    style: {\n      borderRadius: 5,\n      paddingLeft: 40,\n      paddingRight: 40,\n      paddingTop: 12,\n      paddingBottom: 12\n    },\n    onPress: () => setChooseWorkoutModalOpen(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }))), React.createElement(View, {\n    style: {\n      padding: 90,\n      paddingTop: 40\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(Calendar, {\n    onChangeMonth: onChangeMonth,\n    detailsModal: detailsModal,\n    setDetailsModal: setDetailsModal,\n    workoutSubscribed: workoutSubscribed,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }), React.createElement(LegendComponent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }))), createWorkoutModalOpen && React.createElement(CreateWorkoutModal, {\n    setCreateWorkoutModalOpen: setCreateWorkoutModalOpen,\n    exercises: allExercises,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }), chooseWorkoutModalOpen && React.createElement(ChooseWorkoutModal, {\n    detailsModal: detailsModal,\n    setDetailsModal: setDetailsModal,\n    setChooseWorkoutModalOpen: setChooseWorkoutModalOpen,\n    detailsPropObj: detailsPropObj,\n    setDetailsPropObj: setDetailsPropObj,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }), detailsModal && React.createElement(DetailsModal, {\n    detailsModal: detailsModal,\n    setDetailsModal: setDetailsModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/petarpenkov/Documents/fitness-fe-master/app/src/module/screens/CalendarScreen.js"],"names":["React","useState","useEffect","View","Text","SafeAreaView","ScrollView","colors","CalendarDay","Calendar","Button","WhiteOutlinedButton","StandardButton","CreateWorkoutModal","getAllExercises","useDispatch","useSelector","ChooseWorkoutModal","DetailsModal","headers","basicStyles","setFetchCalendar","getAllWorkoutsFiltered","getSubscribedWorkout","getUserInfo","subscribeToWorkout","stateIsLoaded","LegendComponent","CalendarScreen","history","createWorkoutModalOpen","setCreateWorkoutModalOpen","chooseWorkoutModalOpen","setChooseWorkoutModalOpen","detailsModal","setDetailsModal","detailsPropObj","setDetailsPropObj","allExercises","state","fetchCalendar","globalVars","data","dispatch","workoutSubscribed","workoutsSubscribed","userDetails","onChangeMonth","month","year","flex","scrollView","flexDirection","padding","paddingBottom","paddingTop","justifyContent","paddingLeft","H2","secoundaryText","marginBottom","name","H1","primaryText","H3","alignSelf","themeActive","H5","borderRadius","paddingRight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, Text, SafeAreaView, ScrollView } from 'react-native';\nimport { colors } from 'styles';\nimport CalendarDay from 'module/components/CalendarDay';\nimport Calendar from 'module/components/Calendar';\nimport { Button } from '@material-ui/core';\nimport WhiteOutlinedButton from 'module/components/buttons/WhiteOutlinedButton';\nimport StandardButton from 'module/components/buttons/StandardButton';\nimport CreateWorkoutModal from 'module/components/modals/CreateWorkoutModal';\nimport { getAllExercises } from 'redux/actions/data.actions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ChooseWorkoutModal from 'module/components/modals/ChooseWorkoutModal';\nimport DetailsModal from 'module/components/modals/DetailsModal';\nimport { headers, basicStyles } from 'styles';\nimport { setFetchCalendar } from 'redux/actions/vars.actions';\nimport { getAllWorkoutsFiltered, getSubscribedWorkout, getUserInfo, subscribeToWorkout } from '../../redux/actions/data.actions';\nimport { stateIsLoaded } from '../../services/stateHelpers';\nimport LegendComponent from 'module/components/LegendComponent';\n\nexport default function CalendarScreen({ history }) {\n    const [createWorkoutModalOpen, setCreateWorkoutModalOpen] = useState(false);\n    const [chooseWorkoutModalOpen, setChooseWorkoutModalOpen] = useState(false);\n    const [detailsModal, setDetailsModal] = useState(false);\n    const [detailsPropObj, setDetailsPropObj] = useState({});\n    const allExercises = useSelector(state => state.allExercises);\n    const fetchCalendar = useSelector(state => state.globalVars.data.fetchCalendar);\n    const dispatch = useDispatch();\n    // const []\n\n    const workoutSubscribed = useSelector(state => state.workoutsSubscribed.data);\n    const userDetails = useSelector(state => state.workoutsSubscribed.data);\n\n    useEffect(() => {\n        // console.log('fetch calendar', fetchCalendar);\n        if (fetchCalendar) {\n            dispatch(getSubscribedWorkout());\n            dispatch(setFetchCalendar(false));\n        }\n    }, [fetchCalendar]);\n\n    // getAllExercises;\n    useEffect(() => {\n        dispatch(getAllExercises());\n        // dispatch(subscribeToWorkout(2));\n        // dispatch(getAllWorkoutsFiltered(3, 'hard'));\n    }, []);\n\n    useEffect(() => {\n        dispatch(getUserInfo());\n    }, []);\n\n    function onChangeMonth(month, year) {\n        dispatch(getSubscribedWorkout(month, year));\n    }\n    return (\n        <SafeAreaView style={{ flex: 1 }}>\n            <ScrollView style={[basicStyles.scrollView]}>\n                <View style={{ flexDirection: 'row', padding: 90, paddingBottom: 0, paddingTop: 40 }}>\n                    <View style={{ flex: 1, justifyContent: 'flex-end', paddingLeft: 30 }}>\n                        <Text style={[headers.H2(colors.secoundaryText(), 'Light'), { marginBottom: 12 }]}>Workout plan</Text>\n                        {workoutSubscribed.name && <Text style={[headers.H1(colors.primaryText(), 'Light')]}>{workoutSubscribed.name} </Text>}\n                        {!workoutSubscribed.name && (\n                            <Text style={[headers.H3(colors.primaryText(), 'Light')]}>\n                                You have not yet subscribed to any of the workout plans for this month!{' '}\n                            </Text>\n                        )}\n                    </View>\n                    <View style={{ alignSelf: 'flex-end' }}>\n                        <StandardButton\n                            hasShadow={true}\n                            title={'Create workout'}\n                            color={colors.themeActive()}\n                            titleStyle={headers.H5('white', 'Black-Cond')}\n                            style={{ borderRadius: 5, paddingLeft: 40, paddingRight: 40, paddingTop: 12, paddingBottom: 12, marginBottom: 15 }}\n                            onPress={() => setCreateWorkoutModalOpen(true)}\n                        ></StandardButton>\n                        <StandardButton\n                            hasShadow={true}\n                            title={'Choose workout'}\n                            color={colors.themeActive()}\n                            titleStyle={headers.H5('white', 'Black-Cond')}\n                            style={{ borderRadius: 5, paddingLeft: 40, paddingRight: 40, paddingTop: 12, paddingBottom: 12 }}\n                            onPress={() => setChooseWorkoutModalOpen(true)}\n                        ></StandardButton>\n                    </View>\n                </View>\n\n                <View style={{ padding: 90, paddingTop: 40 }}>\n                    <Calendar\n                        onChangeMonth={onChangeMonth}\n                        detailsModal={detailsModal}\n                        setDetailsModal={setDetailsModal}\n                        workoutSubscribed={workoutSubscribed}\n                    ></Calendar>\n                    <LegendComponent></LegendComponent>\n                </View>\n            </ScrollView>\n\n            {createWorkoutModalOpen && (\n                <CreateWorkoutModal setCreateWorkoutModalOpen={setCreateWorkoutModalOpen} exercises={allExercises}></CreateWorkoutModal>\n            )}\n            {chooseWorkoutModalOpen && (\n                <ChooseWorkoutModal\n                    detailsModal={detailsModal}\n                    setDetailsModal={setDetailsModal}\n                    setChooseWorkoutModalOpen={setChooseWorkoutModalOpen}\n                    detailsPropObj={detailsPropObj}\n                    setDetailsPropObj={setDetailsPropObj}\n                ></ChooseWorkoutModal>\n            )}\n            {detailsModal && <DetailsModal detailsModal={detailsModal} setDetailsModal={setDetailsModal}></DetailsModal>}\n        </SafeAreaView>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _objectSpread from \"/Users/petarpenkov/Documents/fitness-fe-master/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { ActionStatus } from 'redux/core/ActionStatus';\nimport { buildActionType } from 'redux/actions/buildActionType';\nimport { StateStatus } from 'redux/core/StateStatus';\nconst initialState = {\n  auth: '',\n  data: {}\n};\n\nconst basicReducer = actionType => (state = initialState, action) => {\n  switch (action.type) {\n    case buildActionType(actionType, ActionStatus.START):\n      return _objectSpread({}, initialState, {\n        status: StateStatus.LOADING,\n        version: state.version,\n        entity: actionType.entity\n      });\n\n    case buildActionType(actionType, ActionStatus.DONE):\n      return {\n        status: StateStatus.LOADED,\n        data: action.payload,\n        entity: actionType.entity,\n        version: +new Date()\n      };\n\n    case buildActionType(actionType, ActionStatus.FAILED):\n      return {\n        status: StateStatus.ERROR,\n        errors: action.payload\n      };\n\n    case buildActionType(actionType, ActionStatus.RESET):\n      return initialState;\n\n    default:\n      return state;\n  }\n};\n\nexport { basicReducer };","map":{"version":3,"sources":["/Users/petarpenkov/Documents/fitness-fe-master/app/src/redux/reducers/basic.reducer.js"],"names":["ActionStatus","buildActionType","StateStatus","initialState","auth","data","basicReducer","actionType","state","action","type","START","status","LOADING","version","entity","DONE","LOADED","payload","Date","FAILED","ERROR","errors","RESET"],"mappings":";AAAA,SAASA,YAAT,QAA6B,yBAA7B;AACA,SAASC,eAAT,QAAgC,+BAAhC;AACA,SAASC,WAAT,QAA4B,wBAA5B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE,EADW;AAEjBC,EAAAA,IAAI,EAAE;AAFW,CAArB;;AAKA,MAAMC,YAAY,GAAGC,UAAU,IAAI,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AACjE,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKT,eAAe,CAACM,UAAD,EAAaP,YAAY,CAACW,KAA1B,CAApB;AACI,+BACOR,YADP;AAEIS,QAAAA,MAAM,EAAEV,WAAW,CAACW,OAFxB;AAGIC,QAAAA,OAAO,EAAEN,KAAK,CAACM,OAHnB;AAIIC,QAAAA,MAAM,EAAER,UAAU,CAACQ;AAJvB;;AAOJ,SAAKd,eAAe,CAACM,UAAD,EAAaP,YAAY,CAACgB,IAA1B,CAApB;AACI,aAAO;AACHJ,QAAAA,MAAM,EAAEV,WAAW,CAACe,MADjB;AAEHZ,QAAAA,IAAI,EAAEI,MAAM,CAACS,OAFV;AAGHH,QAAAA,MAAM,EAAER,UAAU,CAACQ,MAHhB;AAIHD,QAAAA,OAAO,EAAE,CAAC,IAAIK,IAAJ;AAJP,OAAP;;AAOJ,SAAKlB,eAAe,CAACM,UAAD,EAAaP,YAAY,CAACoB,MAA1B,CAApB;AACI,aAAO;AACHR,QAAAA,MAAM,EAAEV,WAAW,CAACmB,KADjB;AAEHC,QAAAA,MAAM,EAAEb,MAAM,CAACS;AAFZ,OAAP;;AAKJ,SAAKjB,eAAe,CAACM,UAAD,EAAaP,YAAY,CAACuB,KAA1B,CAApB;AACI,aAAOpB,YAAP;;AAEJ;AACI,aAAOK,KAAP;AA3BR;AA6BH,CA9BD;;AAgCA,SAASF,YAAT","sourcesContent":["import { ActionStatus } from 'redux/core/ActionStatus';\nimport { buildActionType } from 'redux/actions/buildActionType';\nimport { StateStatus } from 'redux/core/StateStatus';\n\nconst initialState = {\n    auth: '',\n    data: {},\n};\n\nconst basicReducer = actionType => (state = initialState, action) => {\n    switch (action.type) {\n        case buildActionType(actionType, ActionStatus.START):\n            return {\n                ...initialState,\n                status: StateStatus.LOADING,\n                version: state.version,\n                entity: actionType.entity,\n            };\n\n        case buildActionType(actionType, ActionStatus.DONE):\n            return {\n                status: StateStatus.LOADED,\n                data: action.payload,\n                entity: actionType.entity,\n                version: +new Date(),\n            };\n\n        case buildActionType(actionType, ActionStatus.FAILED):\n            return {\n                status: StateStatus.ERROR,\n                errors: action.payload,\n            };\n\n        case buildActionType(actionType, ActionStatus.RESET):\n            return initialState;\n\n        default:\n            return state;\n    }\n};\n\nexport { basicReducer };\n"]},"metadata":{},"sourceType":"module"}
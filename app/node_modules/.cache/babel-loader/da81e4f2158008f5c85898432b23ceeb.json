{"ast":null,"code":"import _objectSpread from \"/Users/petarpenkov/Documents/fitness-fe-master/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/petarpenkov/Documents/fitness-fe-master/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/petarpenkov/Documents/fitness-fe-master/app/src/module/components/modals/ChooseWorkoutModal.js\";\nimport React, { useState, useEffect } from 'react';\nimport { View, Text, ScrollView, ImageBackground, Button, Dimensions, Image } from 'react-native';\nimport { colors, headers } from 'styles';\nimport { InputBase, TextField, FormControl, InputLabel, MenuItem, Select, withStyles } from '@material-ui/core';\nimport CustomSelect from '../CustomSelect';\nimport CustomInput from 'module/components/CustomInput';\nimport TitledGroupBox from '../TitledGroupBox';\nimport CustomCounter from 'module/components/CustomCounter';\nimport StandardButton from '../buttons/StandardButton';\nimport CloseButton from '../buttons/CloseButton';\nimport CalendarDay from 'module/components/CalendarDay';\nimport ExerciseEntry from '../ExerciseEntry';\nimport { newWorkoutAction } from 'redux/actions/data.actions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { workoutPlanMock } from 'static/mockObjects';\nimport WhiteOutlinedButton from '../buttons/WhiteOutlinedButton';\nimport { TouchableOpacity, SafeAreaView } from 'react-native-web';\nimport DetailsModal from './DetailsModal';\nimport { getAllWorkoutsFiltered, getSubscribedWorkout, getUserInfo, subscribeToWorkout } from 'redux/actions/data.actions';\nimport ConfirmDialog from './ConfirmDialogSubscribe';\nimport { checkForSubscription, resetCheckForSubscription } from '../../../redux/actions/data.actions';\nimport { stateIsLoaded } from '../../../services/stateHelpers';\nimport ModalTitle from 'module/components/modals/components/ModalTitle';\nimport previewJPG from 'assets/icons-for-web/previewWHITE.png';\nexport default function ChooseWorkoutModal({\n  history,\n  exercises,\n  setDetailsModal,\n  detailsModalOpen,\n  setChooseWorkoutModalOpen,\n  setDetailsPropObj,\n  detailsPropObj\n}) {\n  let frequencyOptions = [{\n    name: '3 days',\n    value: 4,\n    id: 1\n  }, {\n    name: '4 days',\n    value: 4,\n    id: 2\n  }, {\n    name: '5 days',\n    value: 5,\n    id: 3\n  }];\n  let difficultyOptions = [{\n    name: 'Beginner',\n    value: 4,\n    id: 1\n  }, {\n    name: 'Intermediate',\n    value: 4,\n    id: 2\n  }, {\n    name: 'Proffesional',\n    value: 5,\n    id: 3\n  }];\n  let workoutTypeOptions = [{\n    name: 'Beginner',\n    value: 4,\n    id: 1\n  }, {\n    name: 'Intermediate',\n    value: 4,\n    id: 2\n  }, {\n    name: 'Proffesional',\n    value: 5,\n    id: 3\n  }];\n  const dispatch = useDispatch();\n  const workoutsFiltered = useSelector(state => state.workoutsFiltered.data);\n  const checkForSubscriptionState = useSelector(state => state.checkForSubscription);\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        open = _useState2[0],\n        setOpen = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        confirmed = _useState4[0],\n        setConfirmed = _useState4[1];\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    dispatch(resetCheckForSubscription());\n  };\n\n  const _useState5 = useState({\n    frequency: 3,\n    difficulty: 'easy',\n    workoutType: 'Bodybuilding',\n    chosenWorkoutPlan: null\n  }),\n        _useState6 = _slicedToArray(_useState5, 2),\n        workoutPlanFilters = _useState6[0],\n        setWorkoutPlanFilters = _useState6[1];\n\n  const _useState7 = useState(workoutPlanMock),\n        _useState8 = _slicedToArray(_useState7, 2),\n        mockWorkoutPlanState = _useState8[0],\n        setMockWorkoutPlanState = _useState8[1];\n\n  const window = Dimensions.get('window');\n\n  const _useState9 = useState({\n    window\n  }),\n        _useState10 = _slicedToArray(_useState9, 2),\n        dimensions = _useState10[0],\n        setDimensions = _useState10[1];\n\n  const onChange = ({\n    window,\n    screen\n  }) => {\n    setDimensions({\n      window\n    });\n  };\n\n  useEffect(() => {\n    Dimensions.addEventListener('change', onChange);\n    return () => {\n      Dimensions.removeEventListener('change', onChange);\n    };\n  });\n  useEffect(() => {\n    dispatch(getAllWorkoutsFiltered(3, 'easy'));\n  }, []);\n  useEffect(() => {\n    setWorkoutPlanFilters(_objectSpread({}, workoutPlanFilters, {\n      chosenWorkoutPlan: null\n    }));\n    dispatch(getAllWorkoutsFiltered(workoutPlanFilters.frequency, workoutPlanFilters.difficulty));\n  }, [workoutPlanFilters.frequency, workoutPlanFilters.difficulty]); // console.log(workoutPlanFilters.chosenWorkoutPlan);\n\n  function subscribe() {\n    dispatch(checkForSubscription());\n  }\n\n  useEffect(() => {\n    if (stateIsLoaded(checkForSubscriptionState)) {\n      // console.log(checkForSubscriptionState);\n      if (checkForSubscriptionState.data.data === true && !open) {\n        setOpen(true);\n      } else if (confirmed) {\n        dispatch(subscribeToWorkout(workoutPlanFilters.chosenWorkoutPlan.id));\n        setOpen(false);\n        setChooseWorkoutModalOpen(false);\n        setConfirmed(false);\n        dispatch(resetCheckForSubscription());\n      } else {\n        dispatch(subscribeToWorkout(workoutPlanFilters.chosenWorkoutPlan.id));\n        dispatch(resetCheckForSubscription());\n        setChooseWorkoutModalOpen(false);\n      }\n    }\n  }, [checkForSubscriptionState, confirmed]);\n\n  function handleConfirm() {\n    setConfirmed(true); // dispatch(resetCheckForSubscription());\n  }\n\n  return React.createElement(ImageBackground, {\n    style: {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n      backgroundImage: `linear-gradient(to bottom right, ${colors.themePrimary(100)}, ${colors.themePrimary(50)}, ${colors.themePrimary(70)}, ${colors.themeSecoundary(50)},  ${colors.themeSecoundary(100)} )`\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, React.createElement(TouchableOpacity, {\n    onPress: () => {\n      setChooseWorkoutModalOpen(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, React.createElement(ImageBackground, {\n    style: {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  })), React.createElement(SafeAreaView, {\n    style: {\n      top: dimensions.window.height * 0.1,\n      marginLeft: dimensions.window.width * 0.1,\n      marginRight: dimensions.window.width * 0.1,\n      height: dimensions.window.height * 0.8,\n      backgroundColor: 'white',\n      boxShadow: '-10px 12px 11px -1px rgba(0,0,0,0.2)',\n      overflow: 'auto'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, React.createElement(View, {\n    style: {\n      position: 'absolute',\n      zIndex: 99,\n      width: 55,\n      height: 55,\n      right: 0\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }, React.createElement(CloseButton, {\n    title: \"close\",\n    onPress: () => {\n      setChooseWorkoutModalOpen(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  })), React.createElement(ModalTitle, {\n    title: 'Choose your workout plan',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  }), React.createElement(View, {\n    style: {\n      paddingLeft: 45,\n      paddingTop: 30,\n      paddingRight: 45,\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }, React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }, React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  }, React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      paddingBottom: 35\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212\n    },\n    __self: this\n  }, React.createElement(Text, {\n    style: [headers.H4('black', 'Light'), {\n      width: 230\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  }, \"1. Choose your frequency: \"), React.createElement(CustomSelect, {\n    data: [3, 4, 5],\n    suffix: ' days',\n    onChange: value => {\n      setWorkoutPlanFilters(_objectSpread({}, workoutPlanFilters, {\n        frequency: +value\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  })), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      paddingBottom: 35\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  }, React.createElement(Text, {\n    style: [headers.H4('black', 'Light'), {\n      width: 230\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226\n    },\n    __self: this\n  }, \"2. Choose difficulty: \"), React.createElement(CustomSelect, {\n    data: ['easy', 'medium', 'hard'],\n    onChange: value => setWorkoutPlanFilters(_objectSpread({}, workoutPlanFilters, {\n      difficulty: value\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  })), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      paddingBottom: 35\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233\n    },\n    __self: this\n  }, React.createElement(Text, {\n    style: [headers.H4('black', 'Light'), {\n      width: 230\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234\n    },\n    __self: this\n  }, \"3. Choose workout type: \"), React.createElement(CustomSelect, {\n    data: ['Bodybuilding', 'Powerlifting'],\n    onChange: value => setWorkoutPlanFilters(_objectSpread({}, workoutPlanFilters, {\n      workoutType: value\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235\n    },\n    __self: this\n  })), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      paddingBottom: 35\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241\n    },\n    __self: this\n  }, React.createElement(Text, {\n    style: [headers.H4('black', 'Light'), {\n      width: 230\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242\n    },\n    __self: this\n  }, \"4. Choose your workout:\"), React.createElement(CustomInput, {\n    maxSize: 300,\n    hasSearch: true,\n    hasOptions: true,\n    options: workoutsFiltered.yours ? [...workoutsFiltered.yours, ...workoutsFiltered.others] : [],\n    value: workoutPlanFilters.chosenWorkoutPlan ? workoutPlanFilters.chosenWorkoutPlan.name : '',\n    setValue: value => setWorkoutPlanFilters(_objectSpread({}, workoutPlanFilters, {\n      chosenWorkoutPlan: value\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244\n    },\n    __self: this\n  }))), React.createElement(SafeAreaView, {\n    style: {\n      flex: 1,\n      zIndex: -1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254\n    },\n    __self: this\n  }, true && React.createElement(TitledGroupBox, {\n    style: {\n      flex: 1,\n      padding: 25,\n      paddingRight: 15\n    },\n    titleStyle: headers.H4('black', 'Light'),\n    title: 'Workout preview',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256\n    },\n    __self: this\n  }, workoutPlanFilters.chosenWorkoutPlan && workoutPlanFilters.chosenWorkoutPlan.id && React.createElement(View, {\n    style: {\n      paddingBottom: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266\n    },\n    __self: this\n  }, React.createElement(Text, {\n    style: [headers.H5(null, 'Medium')],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267\n    },\n    __self: this\n  }, workoutPlanFilters.chosenWorkoutPlan ? workoutPlanFilters.chosenWorkoutPlan.name : 'Nothing selected yet')), !(workoutPlanFilters.chosenWorkoutPlan && workoutPlanFilters.chosenWorkoutPlan.id) && React.createElement(View, {\n    style: {\n      flex: 1,\n      flexBasis: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275\n    },\n    __self: this\n  }, React.createElement(ImageBackground, {\n    source: previewJPG,\n    imageStyle: {\n      opacity: 0.3\n    },\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276\n    },\n    __self: this\n  }, React.createElement(Text, {\n    style: [headers.H1(null, 'Bold')],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281\n    },\n    __self: this\n  }, \"Choose a workout plan to preview it \"))), React.createElement(ScrollView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285\n    },\n    __self: this\n  }, workoutPlanFilters.chosenWorkoutPlan && workoutPlanFilters.chosenWorkoutPlan.dailyWorkouts && workoutPlanFilters.chosenWorkoutPlan.dailyWorkouts.map((el, index) => {\n    return React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, (index + 1) % workoutPlanFilters.chosenWorkoutPlan.frequency === 1 && React.createElement(View, {\n      style: {\n        padding: 10,\n        borderBottomWidth: 1,\n        borderBottomColor: colors.borderGrayColor(20),\n        marginRight: 20,\n        marginBottom: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, React.createElement(Text, {\n      style: [headers.H5('black', 'Italic')],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, \"Week \", index / workoutPlanFilters.chosenWorkoutPlan.frequency + 1, ' ')), React.createElement(View, {\n      onMouseEnter: () => {\n        el.previewButtonVisible = true;\n        setMockWorkoutPlanState(_objectSpread({}, workoutPlanFilters.chosenWorkoutPlan));\n      },\n      onMouseLeave: () => {\n        el.previewButtonVisible = false;\n        setMockWorkoutPlanState(_objectSpread({}, workoutPlanFilters.chosenWorkoutPlan));\n      },\n      style: {\n        flexDirection: 'row',\n        margin: 4,\n        padding: 4,\n        paddingLeft: 4,\n        paddingRight: 4,\n        marginleft: 6,\n        marginRight: 6,\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: el.previewButtonVisible ? colors.themeSecoundary(15) : colors.themeSecoundary(7),\n        borderRadius: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, React.createElement(View, {\n      style: {\n        flex: 1,\n        marginLeft: 10,\n        marginRight: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    }, React.createElement(Text, {\n      style: [headers.H6(null, 'Italic'), {\n        lineHeight: '1.6'\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }, \"Day \", index % workoutPlanFilters.chosenWorkoutPlan.frequency + 1, \":\", ' ', el.dailyWorkoutName)), React.createElement(WhiteOutlinedButton, {\n      title: 'Preview',\n      color: colors.themeSecoundary(),\n      style: {\n        opacity: el.previewButtonVisible ? 1 : 0,\n        backgroundColor: 'transparent',\n        padding: 5,\n        marginRight: 2\n      },\n      titleStyle: headers.H6(colors.themeSecoundary(), 'Bold'),\n      onPress: () => {\n        el.withoutCompletedView = true;\n        setDetailsModal(el); // setDetailsPropObj(el);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339\n      },\n      __self: this\n    })));\n  })))))), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      justifyContent: 'flex-end',\n      padding: 20,\n      marginRight: 20,\n      marginTop: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369\n    },\n    __self: this\n  }, React.createElement(StandardButton, {\n    disabled: !workoutPlanFilters.chosenWorkoutPlan,\n    title: \"Subscribe\",\n    color: colors.themeActive(),\n    style: {\n      borderRadius: 5,\n      paddingLeft: 40,\n      paddingRight: 40,\n      paddingTop: 12,\n      paddingBottom: 12\n    },\n    hasShadow: true,\n    onPress: () => {\n      subscribe();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370\n    },\n    __self: this\n  }), React.createElement(ConfirmDialog, {\n    open: open,\n    handleClose: handleClose,\n    handleConfirm: handleConfirm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381\n    },\n    __self: this\n  }))));\n}","map":{"version":3,"sources":["/Users/petarpenkov/Documents/fitness-fe-master/app/src/module/components/modals/ChooseWorkoutModal.js"],"names":["React","useState","useEffect","View","Text","ScrollView","ImageBackground","Button","Dimensions","Image","colors","headers","InputBase","TextField","FormControl","InputLabel","MenuItem","Select","withStyles","CustomSelect","CustomInput","TitledGroupBox","CustomCounter","StandardButton","CloseButton","CalendarDay","ExerciseEntry","newWorkoutAction","useDispatch","useSelector","workoutPlanMock","WhiteOutlinedButton","TouchableOpacity","SafeAreaView","DetailsModal","getAllWorkoutsFiltered","getSubscribedWorkout","getUserInfo","subscribeToWorkout","ConfirmDialog","checkForSubscription","resetCheckForSubscription","stateIsLoaded","ModalTitle","previewJPG","ChooseWorkoutModal","history","exercises","setDetailsModal","detailsModalOpen","setChooseWorkoutModalOpen","setDetailsPropObj","detailsPropObj","frequencyOptions","name","value","id","difficultyOptions","workoutTypeOptions","dispatch","workoutsFiltered","state","data","checkForSubscriptionState","open","setOpen","confirmed","setConfirmed","handleClickOpen","handleClose","frequency","difficulty","workoutType","chosenWorkoutPlan","workoutPlanFilters","setWorkoutPlanFilters","mockWorkoutPlanState","setMockWorkoutPlanState","window","get","dimensions","setDimensions","onChange","screen","addEventListener","removeEventListener","subscribe","handleConfirm","position","top","left","width","height","backgroundImage","themePrimary","themeSecoundary","marginLeft","marginRight","backgroundColor","boxShadow","overflow","zIndex","right","paddingLeft","paddingTop","paddingRight","flex","flexDirection","alignItems","paddingBottom","H4","yours","others","padding","H5","flexBasis","opacity","justifyContent","H1","dailyWorkouts","map","el","index","borderBottomWidth","borderBottomColor","borderGrayColor","marginBottom","previewButtonVisible","margin","marginleft","borderRadius","H6","lineHeight","dailyWorkoutName","withoutCompletedView","marginTop","themeActive"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, Text, ScrollView, ImageBackground, Button, Dimensions, Image } from 'react-native';\nimport { colors, headers } from 'styles';\nimport { InputBase, TextField, FormControl, InputLabel, MenuItem, Select, withStyles } from '@material-ui/core';\nimport CustomSelect from '../CustomSelect';\nimport CustomInput from 'module/components/CustomInput';\nimport TitledGroupBox from '../TitledGroupBox';\nimport CustomCounter from 'module/components/CustomCounter';\nimport StandardButton from '../buttons/StandardButton';\nimport CloseButton from '../buttons/CloseButton';\n\nimport CalendarDay from 'module/components/CalendarDay';\nimport ExerciseEntry from '../ExerciseEntry';\nimport { newWorkoutAction } from 'redux/actions/data.actions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { workoutPlanMock } from 'static/mockObjects';\nimport WhiteOutlinedButton from '../buttons/WhiteOutlinedButton';\nimport { TouchableOpacity, SafeAreaView } from 'react-native-web';\nimport DetailsModal from './DetailsModal';\nimport { getAllWorkoutsFiltered, getSubscribedWorkout, getUserInfo, subscribeToWorkout } from 'redux/actions/data.actions';\nimport ConfirmDialog from './ConfirmDialogSubscribe';\nimport { checkForSubscription, resetCheckForSubscription } from '../../../redux/actions/data.actions';\nimport { stateIsLoaded } from '../../../services/stateHelpers';\nimport ModalTitle from 'module/components/modals/components/ModalTitle';\n\nimport previewJPG from 'assets/icons-for-web/previewWHITE.png';\n\nexport default function ChooseWorkoutModal({\n    history,\n    exercises,\n    setDetailsModal,\n    detailsModalOpen,\n    setChooseWorkoutModalOpen,\n    setDetailsPropObj,\n    detailsPropObj,\n}) {\n    let frequencyOptions = [\n        {\n            name: '3 days',\n            value: 4,\n            id: 1,\n        },\n        {\n            name: '4 days',\n            value: 4,\n            id: 2,\n        },\n        {\n            name: '5 days',\n            value: 5,\n            id: 3,\n        },\n    ];\n    let difficultyOptions = [\n        {\n            name: 'Beginner',\n            value: 4,\n            id: 1,\n        },\n        {\n            name: 'Intermediate',\n            value: 4,\n            id: 2,\n        },\n        {\n            name: 'Proffesional',\n            value: 5,\n            id: 3,\n        },\n    ];\n    let workoutTypeOptions = [\n        {\n            name: 'Beginner',\n            value: 4,\n            id: 1,\n        },\n        {\n            name: 'Intermediate',\n            value: 4,\n            id: 2,\n        },\n        {\n            name: 'Proffesional',\n            value: 5,\n            id: 3,\n        },\n    ];\n    const dispatch = useDispatch();\n\n    const workoutsFiltered = useSelector(state => state.workoutsFiltered.data);\n\n    const checkForSubscriptionState = useSelector(state => state.checkForSubscription);\n\n    const [open, setOpen] = useState(false);\n    const [confirmed, setConfirmed] = useState(false);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n        dispatch(resetCheckForSubscription());\n    };\n\n    const [workoutPlanFilters, setWorkoutPlanFilters] = useState({\n        frequency: 3,\n        difficulty: 'easy',\n        workoutType: 'Bodybuilding',\n        chosenWorkoutPlan: null,\n    });\n    const [mockWorkoutPlanState, setMockWorkoutPlanState] = useState(workoutPlanMock);\n\n    const window = Dimensions.get('window');\n\n    const [dimensions, setDimensions] = useState({ window });\n\n    const onChange = ({ window, screen }) => {\n        setDimensions({ window });\n    };\n\n    useEffect(() => {\n        Dimensions.addEventListener('change', onChange);\n        return () => {\n            Dimensions.removeEventListener('change', onChange);\n        };\n    });\n\n    useEffect(() => {\n        dispatch(getAllWorkoutsFiltered(3, 'easy'));\n    }, []);\n\n    useEffect(() => {\n        setWorkoutPlanFilters({ ...workoutPlanFilters, chosenWorkoutPlan: null });\n        dispatch(getAllWorkoutsFiltered(workoutPlanFilters.frequency, workoutPlanFilters.difficulty));\n    }, [workoutPlanFilters.frequency, workoutPlanFilters.difficulty]);\n\n    // console.log(workoutPlanFilters.chosenWorkoutPlan);\n\n    function subscribe() {\n        dispatch(checkForSubscription());\n    }\n\n    useEffect(() => {\n        if (stateIsLoaded(checkForSubscriptionState)) {\n            // console.log(checkForSubscriptionState);\n            if (checkForSubscriptionState.data.data === true && !open) {\n                setOpen(true);\n            } else if (confirmed) {\n                dispatch(subscribeToWorkout(workoutPlanFilters.chosenWorkoutPlan.id));\n                setOpen(false);\n                setChooseWorkoutModalOpen(false);\n                setConfirmed(false);\n                dispatch(resetCheckForSubscription());\n            } else {\n                dispatch(subscribeToWorkout(workoutPlanFilters.chosenWorkoutPlan.id));\n                dispatch(resetCheckForSubscription());\n                setChooseWorkoutModalOpen(false);\n            }\n        }\n    }, [checkForSubscriptionState, confirmed]);\n\n    function handleConfirm() {\n        setConfirmed(true);\n        // dispatch(resetCheckForSubscription());\n    }\n    return (\n        <ImageBackground\n            style={{\n                position: 'fixed',\n                top: 0,\n                left: 0,\n                width: '100%',\n                height: '100%',\n                backgroundImage: `linear-gradient(to bottom right, ${colors.themePrimary(100)}, ${colors.themePrimary(50)}, ${colors.themePrimary(\n                    70\n                )}, ${colors.themeSecoundary(50)},  ${colors.themeSecoundary(100)} )`,\n            }}\n        >\n            <TouchableOpacity\n                onPress={() => {\n                    setChooseWorkoutModalOpen(false);\n                }}\n            >\n                <ImageBackground style={{ position: 'fixed', top: 0, left: 0, width: '100%', height: '100%' }} />\n            </TouchableOpacity>\n            <SafeAreaView\n                style={{\n                    top: dimensions.window.height * 0.1,\n                    marginLeft: dimensions.window.width * 0.1,\n                    marginRight: dimensions.window.width * 0.1,\n                    height: dimensions.window.height * 0.8,\n                    backgroundColor: 'white',\n                    boxShadow: '-10px 12px 11px -1px rgba(0,0,0,0.2)',\n                    overflow: 'auto',\n                }}\n            >\n                <View style={{ position: 'absolute', zIndex: 99, width: 55, height: 55, right: 0 }}>\n                    <CloseButton\n                        title=\"close\"\n                        onPress={() => {\n                            setChooseWorkoutModalOpen(false);\n                        }}\n                    ></CloseButton>\n                </View>\n\n                <ModalTitle title={'Choose your workout plan'} />\n\n                <View style={{ paddingLeft: 45, paddingTop: 30, paddingRight: 45, flex: 1 }}>\n                    <View style={{ flexDirection: 'row', flex: 1 }}>\n                        <View style={{ flex: 1 }}>\n                            <View style={{ flexDirection: 'row', alignItems: 'center', paddingBottom: 35 }}>\n                                <Text style={[headers.H4('black', 'Light'), { width: 230 }]}>1. Choose your frequency: </Text>\n\n                                <CustomSelect\n                                    data={[3, 4, 5]}\n                                    suffix={' days'}\n                                    onChange={value => {\n                                        setWorkoutPlanFilters({ ...workoutPlanFilters, frequency: +value });\n                                    }}\n                                ></CustomSelect>\n                            </View>\n\n                            <View style={{ flexDirection: 'row', alignItems: 'center', paddingBottom: 35 }}>\n                                {/* <Text>2. Choose difficulty </Text> */}\n                                <Text style={[headers.H4('black', 'Light'), { width: 230 }]}>2. Choose difficulty: </Text>\n\n                                <CustomSelect\n                                    data={['easy', 'medium', 'hard']}\n                                    onChange={value => setWorkoutPlanFilters({ ...workoutPlanFilters, difficulty: value })}\n                                ></CustomSelect>\n                            </View>\n                            <View style={{ flexDirection: 'row', alignItems: 'center', paddingBottom: 35 }}>\n                                <Text style={[headers.H4('black', 'Light'), { width: 230 }]}>3. Choose workout type: </Text>\n                                <CustomSelect\n                                    data={['Bodybuilding', 'Powerlifting']}\n                                    onChange={value => setWorkoutPlanFilters({ ...workoutPlanFilters, workoutType: value })}\n                                ></CustomSelect>\n                            </View>\n\n                            <View style={{ flexDirection: 'row', alignItems: 'center', paddingBottom: 35 }}>\n                                <Text style={[headers.H4('black', 'Light'), { width: 230 }]}>4. Choose your workout:</Text>\n\n                                <CustomInput\n                                    maxSize={300}\n                                    hasSearch={true}\n                                    hasOptions={true}\n                                    options={workoutsFiltered.yours ? [...workoutsFiltered.yours, ...workoutsFiltered.others] : []}\n                                    value={workoutPlanFilters.chosenWorkoutPlan ? workoutPlanFilters.chosenWorkoutPlan.name : ''}\n                                    setValue={value => setWorkoutPlanFilters({ ...workoutPlanFilters, chosenWorkoutPlan: value })}\n                                ></CustomInput>\n                            </View>\n                        </View>\n                        <SafeAreaView style={{ flex: 1, zIndex: -1 }}>\n                            {true && (\n                                <TitledGroupBox\n                                    style={{\n                                        flex: 1,\n                                        padding: 25,\n                                        paddingRight: 15,\n                                    }}\n                                    titleStyle={headers.H4('black', 'Light')}\n                                    title={'Workout preview'}\n                                >\n                                    {workoutPlanFilters.chosenWorkoutPlan && workoutPlanFilters.chosenWorkoutPlan.id && (\n                                        <View style={{ paddingBottom: 10 }}>\n                                            <Text style={[headers.H5(null, 'Medium')]}>\n                                                {workoutPlanFilters.chosenWorkoutPlan\n                                                    ? workoutPlanFilters.chosenWorkoutPlan.name\n                                                    : 'Nothing selected yet'}\n                                            </Text>\n                                        </View>\n                                    )}\n                                    {!(workoutPlanFilters.chosenWorkoutPlan && workoutPlanFilters.chosenWorkoutPlan.id) && (\n                                        <View style={{ flex: 1, flexBasis: '100%' }}>\n                                            <ImageBackground\n                                                source={previewJPG}\n                                                imageStyle={{ opacity: 0.3 }}\n                                                style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}\n                                            >\n                                                <Text style={[headers.H1(null, 'Bold')]}>Choose a workout plan to preview it </Text>\n                                            </ImageBackground>\n                                        </View>\n                                    )}\n                                    <ScrollView>\n                                        {workoutPlanFilters.chosenWorkoutPlan &&\n                                            workoutPlanFilters.chosenWorkoutPlan.dailyWorkouts &&\n                                            workoutPlanFilters.chosenWorkoutPlan.dailyWorkouts.map((el, index) => {\n                                                return (\n                                                    <View>\n                                                        {(index + 1) % workoutPlanFilters.chosenWorkoutPlan.frequency === 1 && (\n                                                            <View\n                                                                style={{\n                                                                    padding: 10,\n                                                                    borderBottomWidth: 1,\n                                                                    borderBottomColor: colors.borderGrayColor(20),\n                                                                    marginRight: 20,\n                                                                    marginBottom: 5,\n                                                                }}\n                                                            >\n                                                                <Text style={[headers.H5('black', 'Italic')]}>\n                                                                    Week {index / workoutPlanFilters.chosenWorkoutPlan.frequency + 1}{' '}\n                                                                </Text>\n                                                            </View>\n                                                        )}\n                                                        <View\n                                                            onMouseEnter={() => {\n                                                                el.previewButtonVisible = true;\n                                                                setMockWorkoutPlanState({ ...workoutPlanFilters.chosenWorkoutPlan });\n                                                            }}\n                                                            onMouseLeave={() => {\n                                                                el.previewButtonVisible = false;\n                                                                setMockWorkoutPlanState({ ...workoutPlanFilters.chosenWorkoutPlan });\n                                                            }}\n                                                            style={{\n                                                                flexDirection: 'row',\n                                                                margin: 4,\n                                                                padding: 4,\n                                                                paddingLeft: 4,\n                                                                paddingRight: 4,\n                                                                marginleft: 6,\n                                                                marginRight: 6,\n\n                                                                justifyContent: 'center',\n                                                                alignItems: 'center',\n                                                                backgroundColor: el.previewButtonVisible\n                                                                    ? colors.themeSecoundary(15)\n                                                                    : colors.themeSecoundary(7),\n                                                                borderRadius: 5,\n                                                            }}\n                                                        >\n                                                            <View style={{ flex: 1, marginLeft: 10, marginRight: 10 }}>\n                                                                <Text style={[headers.H6(null, 'Italic'), { lineHeight: '1.6' }]}>\n                                                                    Day {(index % workoutPlanFilters.chosenWorkoutPlan.frequency) + 1}:{' '}\n                                                                    {el.dailyWorkoutName}\n                                                                </Text>\n                                                            </View>\n                                                            {\n                                                                <WhiteOutlinedButton\n                                                                    title={'Preview'}\n                                                                    color={colors.themeSecoundary()}\n                                                                    style={{\n                                                                        opacity: el.previewButtonVisible ? 1 : 0,\n                                                                        backgroundColor: 'transparent',\n                                                                        padding: 5,\n                                                                        marginRight: 2,\n                                                                    }}\n                                                                    titleStyle={headers.H6(colors.themeSecoundary(), 'Bold')}\n                                                                    onPress={() => {\n                                                                        el.withoutCompletedView = true;\n                                                                        setDetailsModal(el);\n                                                                        // setDetailsPropObj(el);\n                                                                    }}\n                                                                ></WhiteOutlinedButton>\n                                                            }\n                                                        </View>\n                                                    </View>\n                                                );\n                                            })}\n                                    </ScrollView>\n                                </TitledGroupBox>\n                            )}\n                            {/* {!workoutPlanFilters.chosenWorkoutPlan && (\n                                \n                            )} */}\n                        </SafeAreaView>\n                    </View>\n                </View>\n                <View style={{ flexDirection: 'row', justifyContent: 'flex-end', padding: 20, marginRight: 20, marginTop: 10 }}>\n                    <StandardButton\n                        disabled={!workoutPlanFilters.chosenWorkoutPlan}\n                        title=\"Subscribe\"\n                        color={colors.themeActive()}\n                        style={{ borderRadius: 5, paddingLeft: 40, paddingRight: 40, paddingTop: 12, paddingBottom: 12 }}\n                        hasShadow={true}\n                        onPress={() => {\n                            subscribe();\n                        }}\n                    ></StandardButton>\n\n                    <ConfirmDialog open={open} handleClose={handleClose} handleConfirm={handleConfirm}></ConfirmDialog>\n                </View>\n            </SafeAreaView>\n        </ImageBackground>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}
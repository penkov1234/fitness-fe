{"ast":null,"code":"import _objectSpread from \"/Users/petarpenkov/Documents/fitness-fe-master/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/petarpenkov/Documents/fitness-fe-master/app/src/module/components/Graph.js\";\nimport React from 'react';\nimport { BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { headers, colors } from 'styles';\nimport { View, Text } from 'react-native';\nexport default function Graph({\n  data,\n  style,\n  width,\n  height\n}) {\n  return React.createElement(View, {\n    style: {\n      backgroundColor: colors.background(10),\n      width: '100%',\n      height: '35%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(Text, {\n    style: [headers.H3(colors.lightText(), 'Light'), {\n      marginTop: 30,\n      marginBottom: 30,\n      textAlign: 'center'\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"Detailed report of finished and failed daily workouts in each month\"), React.createElement(ResponsiveContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(BarChart, {\n    style: _objectSpread({}, style, {}, headers.H4()),\n    data: data,\n    margin: {\n      top: 5,\n      right: 30,\n      left: 20,\n      bottom: 5\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(CartesianGrid, {\n    strokeDasharray: \"3 3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }), React.createElement(XAxis, {\n    dataKey: \"month\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }), React.createElement(YAxis, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }), React.createElement(Tooltip, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }), React.createElement(Legend, {\n    formatter: (value, entry, index) => {\n      return value.charAt(0).toUpperCase() + value.slice(1);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), React.createElement(Bar, {\n    dataKey: \"succeeded\",\n    fill: colors.themeSecoundary(50),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(Bar, {\n    dataKey: \"failed\",\n    fill: colors.themeActive(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }))));\n}","map":{"version":3,"sources":["/Users/petarpenkov/Documents/fitness-fe-master/app/src/module/components/Graph.js"],"names":["React","BarChart","Bar","Cell","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","headers","colors","View","Text","Graph","data","style","width","height","backgroundColor","background","H3","lightText","marginTop","marginBottom","textAlign","H4","top","right","left","bottom","value","entry","index","charAt","toUpperCase","slice","themeSecoundary","themeActive"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,GAAnB,EAAwBC,IAAxB,EAA8BC,KAA9B,EAAqCC,KAArC,EAA4CC,aAA5C,EAA2DC,OAA3D,EAAoEC,MAApE,EAA4EC,mBAA5E,QAAuG,UAAvG;AACA,SAASC,OAAT,EAAkBC,MAAlB,QAAgC,QAAhC;AACA,SAASC,IAAT,EAAeC,IAAf,QAA2B,cAA3B;AAEA,eAAe,SAASC,KAAT,CAAe;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAeC,EAAAA,KAAf;AAAsBC,EAAAA;AAAtB,CAAf,EAA+C;AAC1D,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,eAAe,EAAER,MAAM,CAACS,UAAP,CAAkB,EAAlB,CAAnB;AAA0CH,MAAAA,KAAK,EAAE,MAAjD;AAAyDC,MAAAA,MAAM,EAAE;AAAjE,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACR,OAAO,CAACW,EAAR,CAAWV,MAAM,CAACW,SAAP,EAAX,EAA+B,OAA/B,CAAD,EAA0C;AAAEC,MAAAA,SAAS,EAAE,EAAb;AAAiBC,MAAAA,YAAY,EAAE,EAA/B;AAAmCC,MAAAA,SAAS,EAAE;AAA9C,KAA1C,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2EADJ,EAII,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD;AAAU,IAAA,KAAK,oBAAOT,KAAP,MAAiBN,OAAO,CAACgB,EAAR,EAAjB,CAAf;AAAgD,IAAA,IAAI,EAAEX,IAAtD;AAA4D,IAAA,MAAM,EAAE;AAAEY,MAAAA,GAAG,EAAE,CAAP;AAAUC,MAAAA,KAAK,EAAE,EAAjB;AAAqBC,MAAAA,IAAI,EAAE,EAA3B;AAA+BC,MAAAA,MAAM,EAAE;AAAvC,KAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,aAAD;AAAe,IAAA,eAAe,EAAC,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAII,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAKI,oBAAC,MAAD;AACI,IAAA,SAAS,EAAE,CAACC,KAAD,EAAQC,KAAR,EAAeC,KAAf,KAAyB;AAChC,aAAOF,KAAK,CAACG,MAAN,CAAa,CAAb,EAAgBC,WAAhB,KAAgCJ,KAAK,CAACK,KAAN,CAAY,CAAZ,CAAvC;AACH,KAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,EAUI,oBAAC,GAAD;AAAK,IAAA,OAAO,EAAC,WAAb;AAAyB,IAAA,IAAI,EAAEzB,MAAM,CAAC0B,eAAP,CAAuB,EAAvB,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,EAWI,oBAAC,GAAD;AAAK,IAAA,OAAO,EAAC,QAAb;AAAsB,IAAA,IAAI,EAAE1B,MAAM,CAAC2B,WAAP,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXJ,CADJ,CAJJ,CADJ;AAsBH","sourcesContent":["import React from 'react';\nimport { BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { headers, colors } from 'styles';\nimport { View, Text } from 'react-native';\n\nexport default function Graph({ data, style, width, height }) {\n    return (\n        <View style={{ backgroundColor: colors.background(10), width: '100%', height: '35%' }}>\n            <Text style={[headers.H3(colors.lightText(), 'Light'), { marginTop: 30, marginBottom: 30, textAlign: 'center' }]}>\n                Detailed report of finished and failed daily workouts in each month\n            </Text>\n            <ResponsiveContainer>\n                <BarChart style={{ ...style, ...headers.H4() }} data={data} margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis dataKey=\"month\" />\n                    <YAxis />\n                    <Tooltip />\n                    <Legend\n                        formatter={(value, entry, index) => {\n                            return value.charAt(0).toUpperCase() + value.slice(1);\n                        }}\n                    />\n                    <Bar dataKey=\"succeeded\" fill={colors.themeSecoundary(50)} />\n                    <Bar dataKey=\"failed\" fill={colors.themeActive()} />\n                </BarChart>\n            </ResponsiveContainer>\n        </View>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}
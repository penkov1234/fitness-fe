{"ast":null,"code":"import _objectSpread from \"/Users/petarpenkov/Documents/fitness-fe-master/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/petarpenkov/Documents/fitness-fe-master/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/petarpenkov/Documents/fitness-fe-master/app/src/module/components/modals/CreateWorkoutModal.js\";\nimport React, { useState, useEffect } from 'react';\nimport { View, Text, ScrollView, TouchableOpacity, ImageBackground, Button, Dimensions, SafeAreaView } from 'react-native';\nimport { colors, headers } from 'styles';\nimport { InputBase, TextField, FormControl, InputLabel, MenuItem, Select, withStyles } from '@material-ui/core';\nimport CustomSelect from '../CustomSelect';\nimport CustomInput from 'module/components/CustomInput';\nimport TitledGroupBox from '../TitledGroupBox';\nimport CustomCounter from 'module/components/CustomCounter';\nimport StandardButton from '../buttons/StandardButton';\nimport CloseButton from '../buttons/CloseButton';\nimport WhiteOutlinedButton from 'module/components/buttons/WhiteOutlinedButton';\nimport CalendarDay from 'module/components/CalendarDay';\nimport ExerciseEntry from '../ExerciseEntry';\nimport { newWorkoutAction } from 'redux/actions/data.actions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ModalTitle from 'module/components/modals/components/ModalTitle';\nimport ConfirmDialogCreateWorkout from './ConfirmDialogCreateWorkout';\nconst BootstrapInput = withStyles(theme => ({\n  root: {\n    'label + &': {\n      marginTop: theme.spacing(3)\n    }\n  },\n  input: {\n    borderRadius: 4,\n    position: 'relative',\n    backgroundColor: theme.palette.common.white,\n    border: '1px solid #ced4da',\n    fontSize: 16,\n    width: 'auto',\n    padding: '10px 12px',\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\n    // Use the system font instead of the default Roboto font.\n    fontFamily: ['-apple-system', 'BlinkMacSystemFont', '\"Segoe UI\"', 'Roboto', '\"Helvetica Neue\"', 'Arial', 'sans-serif', '\"Apple Color Emoji\"', '\"Segoe UI Emoji\"', '\"Segoe UI Symbol\"'].join(','),\n    '&:focus': {\n      // boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 0.2rem`,\n      borderColor: theme.palette.primary.main\n    }\n  }\n}))(InputBase);\nexport default function CreateWorkoutModal({\n  history,\n  exercises,\n  setCreateWorkoutModalOpen\n}) {\n  const window = Dimensions.get('window');\n\n  const _useState = useState({\n    window\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        dimensions = _useState2[0],\n        setDimensions = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        locked = _useState4[0],\n        setLocked = _useState4[1];\n\n  let defaultDayInfo = {\n    dailyWorkoutName: '',\n    exercises: []\n  };\n  let defaultWeekInfo = {\n    dailyWorkouts: []\n  };\n  let defaultExercise = {\n    exerciseName: '',\n    numSets: 1,\n    numReps: 1\n  };\n  const dispatch = useDispatch();\n\n  const _useState5 = useState(1),\n        _useState6 = _slicedToArray(_useState5, 2),\n        currentDayInWeekNum = _useState6[0],\n        setCurrentDayInWeekNum = _useState6[1];\n\n  const _useState7 = useState(1),\n        _useState8 = _slicedToArray(_useState7, 2),\n        currentWeekNum = _useState8[0],\n        setCurrentWeekNum = _useState8[1];\n\n  const _useState9 = useState(defaultWeekInfo),\n        _useState10 = _slicedToArray(_useState9, 2),\n        currentWeekInfo = _useState10[0],\n        setCurrentWeekInfo = _useState10[1];\n\n  const _useState11 = useState(defaultDayInfo),\n        _useState12 = _slicedToArray(_useState11, 2),\n        currentDayInfo = _useState12[0],\n        setCurrentDayInfo = _useState12[1];\n\n  const _useState13 = useState(defaultExercise),\n        _useState14 = _slicedToArray(_useState13, 2),\n        currentExercise = _useState14[0],\n        setCurrentExercise = _useState14[1];\n\n  const _useState15 = useState(false),\n        _useState16 = _slicedToArray(_useState15, 2),\n        openDialog = _useState16[0],\n        setOpenDialog = _useState16[1];\n\n  const _useState17 = useState(false),\n        _useState18 = _slicedToArray(_useState17, 2),\n        workoutIsSubmitted = _useState18[0],\n        setWorkoutIsSubmitted = _useState18[1];\n\n  const _useState19 = useState({\n    name: '',\n    frequency: 3,\n    difficulty: 'easy',\n    dailyWorkouts: []\n  }),\n        _useState20 = _slicedToArray(_useState19, 2),\n        workout = _useState20[0],\n        setWorkout = _useState20[1];\n\n  const onChange = ({\n    window,\n    screen\n  }) => {\n    setDimensions({\n      window\n    });\n  };\n\n  useEffect(() => {\n    Dimensions.addEventListener('change', onChange);\n    return () => {\n      Dimensions.removeEventListener('change', onChange);\n    };\n  });\n  useEffect(() => {\n    // console.log(' CURRENT WEEEK NUMERO IS ');\n    // console.log(currentWeekNum);\n    if (currentWeekNum > 4) {\n      setLocked(true);\n    }\n  }, [currentWeekNum]); // console.log(currentWeekInfo.dailyWorkouts.length + ' ' + workout.frequency);\n\n  function handleExerciseClose(exercise) {\n    currentDayInfo.exercises.splice(currentDayInfo.exercises.indexOf(exercise), 1);\n    setCurrentDayInfo(_objectSpread({}, currentDayInfo, {\n      exercises: [...currentDayInfo.exercises]\n    }));\n  }\n\n  function handleCreateNewWeek() {\n    let weekInfo = currentWeekInfo.dailyWorkouts;\n    weekInfo.forEach((el, index) => {\n      el.weekNum = currentWeekNum;\n      el.dayNum = index + 1;\n    });\n    setWorkout(_objectSpread({}, workout, {\n      dailyWorkouts: [...workout.dailyWorkouts, ...weekInfo]\n    }));\n    setCurrentWeekNum(currentWeekNum + 1);\n    setCurrentWeekInfo(defaultWeekInfo);\n    setCurrentDayInWeekNum(1);\n  }\n\n  function repeatForAllWeeks() {\n    let allDays = [];\n\n    for (let i = currentWeekNum; i <= 4; i++) {\n      for (let j = 0; j < currentWeekInfo.dailyWorkouts.length; j++) {\n        let dayInfo = {\n          weekNum: i,\n          dayNum: j + 1,\n          dailyWorkoutName: currentWeekInfo.dailyWorkouts[j].dailyWorkoutName,\n          exercises: currentWeekInfo.dailyWorkouts[j].exercises\n        };\n        allDays.push(dayInfo);\n      }\n    }\n\n    setWorkout(_objectSpread({}, workout, {\n      dailyWorkouts: [...workout.dailyWorkouts, ...allDays]\n    }));\n    setCurrentWeekNum(5);\n  }\n\n  function createWorkout(published) {\n    workout.isPublished = published;\n    dispatch(newWorkoutAction(workout));\n    setWorkoutIsSubmitted(true); // setCreateWorkoutModalOpen(false);\n  }\n\n  return React.createElement(React.Fragment, null, !workoutIsSubmitted && React.createElement(ImageBackground, {\n    style: {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n      backgroundImage: `linear-gradient(to bottom right, ${colors.themePrimary(100)}, ${colors.themePrimary(50)}, ${colors.themePrimary(70)}, ${colors.themeSecoundary(50)},  ${colors.themeSecoundary(100)} )`\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, React.createElement(TouchableOpacity, {\n    onPress: () => {\n      setCreateWorkoutModalOpen(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, React.createElement(ImageBackground, {\n    style: {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  })), React.createElement(SafeAreaView, {\n    style: {\n      // width: '80%',\n      // height: '80%',\n      top: dimensions.window.height * 0.1,\n      marginLeft: dimensions.window.width * 0.1,\n      marginRight: dimensions.window.width * 0.1,\n      height: dimensions.window.height * 0.8,\n      backgroundColor: 'white',\n      boxShadow: '-10px 12px 11px -1px rgba(0,0,0,0.2)'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, React.createElement(View, {\n    style: {\n      position: 'absolute',\n      zIndex: 99,\n      width: 55,\n      height: 55,\n      right: 0\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, React.createElement(CloseButton, {\n    title: \"close\",\n    onPress: () => {\n      setCreateWorkoutModalOpen(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  })), React.createElement(ModalTitle, {\n    title: 'Create your workout plan',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }), React.createElement(ScrollView, {\n    style: {\n      paddingLeft: 45,\n      paddingTop: 30,\n      paddingRight: 40,\n      overflow: 'auto',\n      borderBottomColor: colors.borderGrayColor(30),\n      borderBottomWidth: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      paddingBottom: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  }, React.createElement(Text, {\n    style: [headers.H4('black', 'Light'), {\n      width: 230\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212\n    },\n    __self: this\n  }, \"1. Your workout name: \"), React.createElement(CustomInput, {\n    value: workout.name,\n    setValue: value => setWorkout(_objectSpread({}, workout, {\n      name: value.name\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214\n    },\n    __self: this\n  })), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      paddingBottom: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  }, React.createElement(Text, {\n    style: [headers.H4('black', 'Light'), {\n      width: 230\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }, \"2. Choose your frequency: \"), React.createElement(CustomSelect, {\n    onChange: value => {\n      setWorkout(_objectSpread({}, workout, {\n        frequency: +value\n      }));\n    },\n    data: [3, 4, 5],\n    suffix: ' days',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  })), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      paddingBottom: 40\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226\n    },\n    __self: this\n  }, React.createElement(Text, {\n    style: [headers.H4('black', 'Light'), {\n      width: 230\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  }, \"3. Choose the difficulty: \"), React.createElement(CustomSelect, {\n    onChange: value => {\n      setWorkout(_objectSpread({}, workout, {\n        difficulty: value\n      }));\n    },\n    data: ['easy', 'medium', 'hard'],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  }), React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234\n    },\n    __self: this\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235\n    },\n    __self: this\n  }, \" \"))), React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238\n    },\n    __self: this\n  }, React.createElement(TitledGroupBox, {\n    titleStyle: [headers.H4('black', 'Light')],\n    title: '4. Create your workout',\n    style: {\n      minWidth: 820\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239\n    },\n    __self: this\n  }, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244\n    },\n    __self: this\n  }, React.createElement(View, {\n    style: {\n      paddingLeft: 25\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245\n    },\n    __self: this\n  }, React.createElement(Text, {\n    style: [headers.H5('black', 'Italic'), {\n      paddingBottom: 15\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246\n    },\n    __self: this\n  }, \"Week \", !locked ? currentWeekNum : ' [filled]'), React.createElement(Text, {\n    style: [headers.H5('black', 'Italic'), {\n      paddingLeft: 25,\n      paddingBottom: 15\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249\n    },\n    __self: this\n  }, \"Day\", ' ', !locked ? currentDayInWeekNum < workout.frequency ? currentDayInWeekNum : workout.frequency : '[filled]')), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      paddingLeft: 60,\n      paddingBottom: 15\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258\n    },\n    __self: this\n  }, React.createElement(Text, {\n    style: [headers.H5('black', 'Medium'), {\n      width: 160\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259\n    },\n    __self: this\n  }, \" Daily workout title: \"), React.createElement(CustomInput, {\n    value: currentDayInfo.dailyWorkoutName,\n    setValue: value => setCurrentDayInfo(_objectSpread({}, currentDayInfo, {\n      dailyWorkoutName: value.name\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260\n    },\n    __self: this\n  })), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      zIndex: 999,\n      paddingLeft: 60,\n      paddingBottom: 15\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265\n    },\n    __self: this\n  }, React.createElement(Text, {\n    style: [headers.H5('black', 'Medium'), {\n      width: 160,\n      textAlign: 'left'\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266\n    },\n    __self: this\n  }, \" Add exercise: \"), React.createElement(CustomInput, {\n    hasSearch: true,\n    hasTextAndPicture: true,\n    hasOptions: true,\n    options: exercises ? exercises.data.data : [],\n    value: currentExercise.exerciseName,\n    setValue: value => setCurrentExercise(_objectSpread({}, currentExercise, {\n      exerciseName: value.name,\n      exerciseId: value.id\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267\n    },\n    __self: this\n  }), React.createElement(Text, {\n    style: [headers.H6('black', 'Medium'), {\n      paddingLeft: 8,\n      paddingRight: 8,\n      textAlign: 'center'\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278\n    },\n    __self: this\n  }, \"# of sets\"), React.createElement(CustomCounter, {\n    value: currentExercise.numSets,\n    setValue: value => setCurrentExercise(_objectSpread({}, currentExercise, {\n      numSets: value\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281\n    },\n    __self: this\n  }), React.createElement(Text, {\n    style: [headers.H6('black', 'Medium'), {\n      paddingLeft: 8,\n      paddingRight: 8,\n      textAlign: 'center'\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285\n    },\n    __self: this\n  }, \"# of reps\"), React.createElement(CustomCounter, {\n    style: {\n      marginRight: 10\n    },\n    value: currentExercise.numReps,\n    setValue: value => setCurrentExercise(_objectSpread({}, currentExercise, {\n      numReps: value\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288\n    },\n    __self: this\n  }), React.createElement(StandardButton, {\n    title: \"Enter exercise\",\n    disabled: !currentExercise.exerciseId ? true : false,\n    titleStyle: headers.H5('white', 'Medium'),\n    style: {\n      padding: 10,\n      paddingRight: '2%',\n      paddingLeft: '2%',\n      marginLeft: 'auto',\n      marginRight: 10,\n      alignSelf: 'flex-end'\n    },\n    onPress: () => {\n      if (currentExercise.exerciseId) {\n        setCurrentDayInfo(_objectSpread({}, currentDayInfo, {\n          exercises: [...currentDayInfo.exercises, currentExercise]\n        }));\n        setCurrentExercise({\n          exerciseName: '',\n          numSets: 1,\n          numReps: 1\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293\n    },\n    __self: this\n  })), React.createElement(View, {\n    style: {\n      paddingTop: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318\n    },\n    __self: this\n  }, React.createElement(TitledGroupBox, {\n    titleStyle: headers.H5(null, 'Italic'),\n    title: 'Weeks preview',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319\n    },\n    __self: this\n  }, React.createElement(View, {\n    style: {\n      flexDirection: 'row'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320\n    },\n    __self: this\n  }, React.createElement(View, {\n    style: {\n      width: 20,\n      marginRight: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321\n    },\n    __self: this\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'space-between'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322\n    },\n    __self: this\n  }, React.createElement(View, {\n    style: {\n      width: 6,\n      height: 35,\n      backgroundColor: currentWeekNum > 1 ? colors.themeSecoundary() : colors.themeDull(),\n      borderTopLeftRadius: 3,\n      borderTopRightRadius: 3\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323\n    },\n    __self: this\n  }), React.createElement(View, {\n    style: {\n      width: 6,\n      height: 35,\n      backgroundColor: currentWeekNum > 2 ? colors.themeSecoundary() : colors.themeDull()\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333\n    },\n    __self: this\n  }), React.createElement(View, {\n    style: {\n      width: 6,\n      height: 35,\n      backgroundColor: currentWeekNum > 3 ? colors.themeSecoundary() : colors.themeDull()\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341\n    },\n    __self: this\n  }), React.createElement(View, {\n    style: {\n      width: 6,\n      height: 35,\n      backgroundColor: currentWeekNum > 4 ? colors.themeSecoundary() : colors.themeDull(),\n      borderBottomLeftRadius: 3,\n      borderBottomRightRadius: 3\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349\n    },\n    __self: this\n  }))), React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'flex-start',\n      flexDirection: 'row',\n      overflow: 'auto',\n      marginRight: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361\n    },\n    __self: this\n  }, currentWeekInfo.dailyWorkouts.map((dailyWorkout, index) => {\n    return React.createElement(View, {\n      key: index,\n      style: {\n        alignItems: 'center',\n        marginRight: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372\n      },\n      __self: this\n    }, React.createElement(Text, {\n      style: [headers.H2('black', 'Thin'), {\n        paddingBottom: 10\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373\n      },\n      __self: this\n    }, \"Day \", index + 1), React.createElement(CalendarDay, {\n      prototype: true,\n      date: 1,\n      done: true,\n      rest: false,\n      workoutTitle: dailyWorkout.dailyWorkoutName,\n      style: {\n        width: 140,\n        height: 140,\n        marginBottom: 10\n      },\n      currentWeek: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376\n      },\n      __self: this\n    }));\n  }), currentWeekInfo.dailyWorkouts.length !== workout.frequency && React.createElement(View, {\n    style: {\n      alignItems: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389\n    },\n    __self: this\n  }, React.createElement(Text, {\n    style: [headers.H2('black', 'Thin'), {\n      paddingBottom: 10\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390\n    },\n    __self: this\n  }, \"Day \", currentWeekInfo.dailyWorkouts.length + 1), React.createElement(TitledGroupBox, {\n    style: {\n      width: 330,\n      height: 140,\n      marginBottom: 10,\n      borderRadius: 5,\n      padding: 15\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393\n    },\n    __self: this\n  }, React.createElement(ScrollView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402\n    },\n    __self: this\n  }, currentDayInfo.exercises.length === 0 && React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404\n    },\n    __self: this\n  }, React.createElement(Text, {\n    style: [headers.H6(null, 'Italic')],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405\n    },\n    __self: this\n  }, ' ', \"No exercises added yet\", ' ')), currentDayInfo.exercises.map((exercise, index) => {\n    return React.createElement(ExerciseEntry, {\n      key: index,\n      onClose: () => handleExerciseClose(exercise),\n      title: `${exercise.exerciseName} ${exercise.numSets} sets for ${exercise.numReps} reps`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413\n      },\n      __self: this\n    });\n  }))))), React.createElement(View, {\n    style: {\n      alignSelf: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426\n    },\n    __self: this\n  }, React.createElement(StandardButton, {\n    style: {\n      padding: 10,\n      marginBottom: 10\n    },\n    title: 'Enter day workout',\n    titleStyle: headers.H5('white', 'Medium'),\n    disabled: currentWeekInfo.dailyWorkouts.length !== workout.frequency && currentDayInfo.dailyWorkoutName != '' && currentDayInfo.exercises.length > 0 ? false : true,\n    onPress: () => {\n      setCurrentWeekInfo({\n        dailyWorkouts: [...currentWeekInfo.dailyWorkouts, currentDayInfo]\n      });\n      setCurrentDayInfo(defaultDayInfo);\n      setCurrentDayInWeekNum(currentDayInWeekNum + 1);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427\n    },\n    __self: this\n  }, ' '), React.createElement(StandardButton, {\n    style: {\n      padding: 10,\n      marginBottom: 10\n    },\n    titleStyle: headers.H5('white', 'Medium'),\n    title: 'Repeat for all weeks',\n    disabled: currentWeekInfo.dailyWorkouts.length === workout.frequency ? locked : true,\n    onPress: () => repeatForAllWeeks(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448\n    },\n    __self: this\n  }), React.createElement(StandardButton, {\n    style: {\n      padding: 10,\n      paddingLeft: 20,\n      paddingRight: 20\n    },\n    titleStyle: headers.H5('white', 'Medium'),\n    title: 'Enter and create new week',\n    disabled: currentWeekInfo.dailyWorkouts.length === workout.frequency ? locked : true,\n    onPress: () => handleCreateNewWeek(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455\n    },\n    __self: this\n  }))))))))), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      alignSelf: 'flex-end',\n      padding: 20,\n      marginRight: 25\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 470\n    },\n    __self: this\n  }, React.createElement(StandardButton, {\n    title: 'Submit workout',\n    style: {\n      borderRadius: 5,\n      paddingLeft: 40,\n      paddingRight: 40,\n      paddingTop: 12,\n      paddingBottom: 12\n    },\n    color: colors.themeActive(),\n    disabled: !locked || !workout.name,\n    onPress: () => {\n      setOpenDialog(true);\n    },\n    hasShadow: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 471\n    },\n    __self: this\n  }), React.createElement(ConfirmDialogCreateWorkout, {\n    open: openDialog,\n    handleClose: () => createWorkout(false),\n    handleConfirm: () => createWorkout(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481\n    },\n    __self: this\n  })))), workoutIsSubmitted && React.createElement(ImageBackground, {\n    style: {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n      backgroundImage: `linear-gradient(to bottom right, ${colors.themePrimary(100)}, ${colors.themePrimary(50)}, ${colors.themePrimary(70)}, ${colors.themeSecoundary(50)},  ${colors.themeSecoundary(100)} )`\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 491\n    },\n    __self: this\n  }, React.createElement(TouchableOpacity, {\n    onPress: () => {\n      setCreateWorkoutModalOpen(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 503\n    },\n    __self: this\n  }, React.createElement(ImageBackground, {\n    style: {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 508\n    },\n    __self: this\n  })), React.createElement(View, {\n    style: {\n      justifyContent: 'center',\n      margin: 'auto',\n      alignItems: 'center',\n      backgroundColor: 'white',\n      width: 700,\n      boxShadow: '-10px 12px 11px -1px rgba(0,0,0,0.2)'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 510\n    },\n    __self: this\n  }, React.createElement(View, {\n    style: {\n      justifyContent: 'center',\n      alignItems: 'center',\n      padding: 30\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 520\n    },\n    __self: this\n  }, React.createElement(Text, {\n    style: [headers.H2('black'), {\n      padding: 20\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 521\n    },\n    __self: this\n  }, \" You have just created a new workout plan! \"), React.createElement(Text, {\n    style: [headers.H5(), {\n      padding: 20\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 522\n    },\n    __self: this\n  }, ' ', \"You have successfully created a new workout plan. You can choose to subscribe to the workout plan you have just created or other workout plans by opening the choose workout modal. If you published this workout plan we will also keep statistics and notify you when users subscribe to your workout plan!\", ' '), React.createElement(WhiteOutlinedButton, {\n    title: 'Continue',\n    onPress: () => {\n      setCreateWorkoutModalOpen(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 528\n    },\n    __self: this\n  })))));\n}","map":{"version":3,"sources":["/Users/petarpenkov/Documents/fitness-fe-master/app/src/module/components/modals/CreateWorkoutModal.js"],"names":["React","useState","useEffect","View","Text","ScrollView","TouchableOpacity","ImageBackground","Button","Dimensions","SafeAreaView","colors","headers","InputBase","TextField","FormControl","InputLabel","MenuItem","Select","withStyles","CustomSelect","CustomInput","TitledGroupBox","CustomCounter","StandardButton","CloseButton","WhiteOutlinedButton","CalendarDay","ExerciseEntry","newWorkoutAction","useDispatch","useSelector","ModalTitle","ConfirmDialogCreateWorkout","BootstrapInput","theme","root","marginTop","spacing","input","borderRadius","position","backgroundColor","palette","common","white","border","fontSize","width","padding","transition","transitions","create","fontFamily","join","borderColor","primary","main","CreateWorkoutModal","history","exercises","setCreateWorkoutModalOpen","window","get","dimensions","setDimensions","locked","setLocked","defaultDayInfo","dailyWorkoutName","defaultWeekInfo","dailyWorkouts","defaultExercise","exerciseName","numSets","numReps","dispatch","currentDayInWeekNum","setCurrentDayInWeekNum","currentWeekNum","setCurrentWeekNum","currentWeekInfo","setCurrentWeekInfo","currentDayInfo","setCurrentDayInfo","currentExercise","setCurrentExercise","openDialog","setOpenDialog","workoutIsSubmitted","setWorkoutIsSubmitted","name","frequency","difficulty","workout","setWorkout","onChange","screen","addEventListener","removeEventListener","handleExerciseClose","exercise","splice","indexOf","handleCreateNewWeek","weekInfo","forEach","el","index","weekNum","dayNum","repeatForAllWeeks","allDays","i","j","length","dayInfo","push","createWorkout","published","isPublished","top","left","height","backgroundImage","themePrimary","themeSecoundary","marginLeft","marginRight","boxShadow","zIndex","right","paddingLeft","paddingTop","paddingRight","overflow","borderBottomColor","borderGrayColor","borderBottomWidth","flexDirection","alignItems","paddingBottom","H4","value","minWidth","H5","textAlign","data","exerciseId","id","H6","alignSelf","flex","justifyContent","themeDull","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","map","dailyWorkout","H2","marginBottom","themeActive","margin"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,UAArB,EAAiCC,gBAAjC,EAAmDC,eAAnD,EAAoEC,MAApE,EAA4EC,UAA5E,EAAwFC,YAAxF,QAA4G,cAA5G;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,QAAhC;AACA,SAASC,SAAT,EAAoBC,SAApB,EAA+BC,WAA/B,EAA4CC,UAA5C,EAAwDC,QAAxD,EAAkEC,MAAlE,EAA0EC,UAA1E,QAA4F,mBAA5F;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,cAAP,MAA2B,2BAA3B;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,mBAAP,MAAgC,+CAAhC;AAEA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,SAASC,gBAAT,QAAiC,4BAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,UAAP,MAAuB,gDAAvB;AACA,OAAOC,0BAAP,MAAuC,8BAAvC;AAEA,MAAMC,cAAc,GAAGf,UAAU,CAACgB,KAAK,KAAK;AACxCC,EAAAA,IAAI,EAAE;AACF,iBAAa;AACTC,MAAAA,SAAS,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd;AADF;AADX,GADkC;AAMxCC,EAAAA,KAAK,EAAE;AACHC,IAAAA,YAAY,EAAE,CADX;AAEHC,IAAAA,QAAQ,EAAE,UAFP;AAGHC,IAAAA,eAAe,EAAEP,KAAK,CAACQ,OAAN,CAAcC,MAAd,CAAqBC,KAHnC;AAIHC,IAAAA,MAAM,EAAE,mBAJL;AAKHC,IAAAA,QAAQ,EAAE,EALP;AAMHC,IAAAA,KAAK,EAAE,MANJ;AAOHC,IAAAA,OAAO,EAAE,WAPN;AAQHC,IAAAA,UAAU,EAAEf,KAAK,CAACgB,WAAN,CAAkBC,MAAlB,CAAyB,CAAC,cAAD,EAAiB,YAAjB,CAAzB,CART;AASH;AACAC,IAAAA,UAAU,EAAE,CACR,eADQ,EAER,oBAFQ,EAGR,YAHQ,EAIR,QAJQ,EAKR,kBALQ,EAMR,OANQ,EAOR,YAPQ,EAQR,qBARQ,EASR,kBATQ,EAUR,mBAVQ,EAWVC,IAXU,CAWL,GAXK,CAVT;AAsBH,eAAW;AACP;AACAC,MAAAA,WAAW,EAAEpB,KAAK,CAACQ,OAAN,CAAca,OAAd,CAAsBC;AAF5B;AAtBR;AANiC,CAAL,CAAN,CAAV,CAiCnB5C,SAjCmB,CAAvB;AAkCA,eAAe,SAAS6C,kBAAT,CAA4B;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,SAAX;AAAsBC,EAAAA;AAAtB,CAA5B,EAA+E;AAC1F,QAAMC,MAAM,GAAGrD,UAAU,CAACsD,GAAX,CAAe,QAAf,CAAf;;AAD0F,oBAGtD9D,QAAQ,CAAC;AAAE6D,IAAAA;AAAF,GAAD,CAH8C;AAAA;AAAA,QAGnFE,UAHmF;AAAA,QAGvEC,aAHuE;;AAAA,qBAI9DhE,QAAQ,CAAC,KAAD,CAJsD;AAAA;AAAA,QAInFiE,MAJmF;AAAA,QAI3EC,SAJ2E;;AAM1F,MAAIC,cAAc,GAAG;AACjBC,IAAAA,gBAAgB,EAAE,EADD;AAEjBT,IAAAA,SAAS,EAAE;AAFM,GAArB;AAIA,MAAIU,eAAe,GAAG;AAClBC,IAAAA,aAAa,EAAE;AADG,GAAtB;AAGA,MAAIC,eAAe,GAAG;AAClBC,IAAAA,YAAY,EAAE,EADI;AAElBC,IAAAA,OAAO,EAAE,CAFS;AAGlBC,IAAAA,OAAO,EAAE;AAHS,GAAtB;AAMA,QAAMC,QAAQ,GAAG9C,WAAW,EAA5B;;AAnB0F,qBAqBpC7B,QAAQ,CAAC,CAAD,CArB4B;AAAA;AAAA,QAqBnF4E,mBArBmF;AAAA,QAqB9DC,sBArB8D;;AAAA,qBAsB9C7E,QAAQ,CAAC,CAAD,CAtBsC;AAAA;AAAA,QAsBnF8E,cAtBmF;AAAA,QAsBnEC,iBAtBmE;;AAAA,qBAuB5C/E,QAAQ,CAACqE,eAAD,CAvBoC;AAAA;AAAA,QAuBnFW,eAvBmF;AAAA,QAuBlEC,kBAvBkE;;AAAA,sBAwB9CjF,QAAQ,CAACmE,cAAD,CAxBsC;AAAA;AAAA,QAwBnFe,cAxBmF;AAAA,QAwBnEC,iBAxBmE;;AAAA,sBAyB5CnF,QAAQ,CAACuE,eAAD,CAzBoC;AAAA;AAAA,QAyBnFa,eAzBmF;AAAA,QAyBlEC,kBAzBkE;;AAAA,sBA0BtDrF,QAAQ,CAAC,KAAD,CA1B8C;AAAA;AAAA,QA0BnFsF,UA1BmF;AAAA,QA0BvEC,aA1BuE;;AAAA,sBA2BtCvF,QAAQ,CAAC,KAAD,CA3B8B;AAAA;AAAA,QA2BnFwF,kBA3BmF;AAAA,QA2B/DC,qBA3B+D;;AAAA,sBA6B5DzF,QAAQ,CAAC;AACnC0F,IAAAA,IAAI,EAAE,EAD6B;AAEnCC,IAAAA,SAAS,EAAE,CAFwB;AAGnCC,IAAAA,UAAU,EAAE,MAHuB;AAKnCtB,IAAAA,aAAa,EAAE;AALoB,GAAD,CA7BoD;AAAA;AAAA,QA6BnFuB,OA7BmF;AAAA,QA6B1EC,UA7B0E;;AAqC1F,QAAMC,QAAQ,GAAG,CAAC;AAAElC,IAAAA,MAAF;AAAUmC,IAAAA;AAAV,GAAD,KAAwB;AACrChC,IAAAA,aAAa,CAAC;AAAEH,MAAAA;AAAF,KAAD,CAAb;AACH,GAFD;;AAIA5D,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,UAAU,CAACyF,gBAAX,CAA4B,QAA5B,EAAsCF,QAAtC;AACA,WAAO,MAAM;AACTvF,MAAAA,UAAU,CAAC0F,mBAAX,CAA+B,QAA/B,EAAyCH,QAAzC;AACH,KAFD;AAGH,GALQ,CAAT;AAOA9F,EAAAA,SAAS,CAAC,MAAM;AACZ;AAEA;AACA,QAAI6E,cAAc,GAAG,CAArB,EAAwB;AACpBZ,MAAAA,SAAS,CAAC,IAAD,CAAT;AACH;AACJ,GAPQ,EAON,CAACY,cAAD,CAPM,CAAT,CAhD0F,CAwD1F;;AAEA,WAASqB,mBAAT,CAA6BC,QAA7B,EAAuC;AACnClB,IAAAA,cAAc,CAACvB,SAAf,CAAyB0C,MAAzB,CAAgCnB,cAAc,CAACvB,SAAf,CAAyB2C,OAAzB,CAAiCF,QAAjC,CAAhC,EAA4E,CAA5E;AACAjB,IAAAA,iBAAiB,mBACVD,cADU;AAEbvB,MAAAA,SAAS,EAAE,CAAC,GAAGuB,cAAc,CAACvB,SAAnB;AAFE,OAAjB;AAIH;;AAED,WAAS4C,mBAAT,GAA+B;AAC3B,QAAIC,QAAQ,GAAGxB,eAAe,CAACV,aAA/B;AACAkC,IAAAA,QAAQ,CAACC,OAAT,CAAiB,CAACC,EAAD,EAAKC,KAAL,KAAe;AAC5BD,MAAAA,EAAE,CAACE,OAAH,GAAa9B,cAAb;AACA4B,MAAAA,EAAE,CAACG,MAAH,GAAYF,KAAK,GAAG,CAApB;AACH,KAHD;AAIAb,IAAAA,UAAU,mBAAMD,OAAN;AAAevB,MAAAA,aAAa,EAAE,CAAC,GAAGuB,OAAO,CAACvB,aAAZ,EAA2B,GAAGkC,QAA9B;AAA9B,OAAV;AACAzB,IAAAA,iBAAiB,CAACD,cAAc,GAAG,CAAlB,CAAjB;AACAG,IAAAA,kBAAkB,CAACZ,eAAD,CAAlB;AACAQ,IAAAA,sBAAsB,CAAC,CAAD,CAAtB;AACH;;AAED,WAASiC,iBAAT,GAA6B;AACzB,QAAIC,OAAO,GAAG,EAAd;;AACA,SAAK,IAAIC,CAAC,GAAGlC,cAAb,EAA6BkC,CAAC,IAAI,CAAlC,EAAqCA,CAAC,EAAtC,EAA0C;AACtC,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGjC,eAAe,CAACV,aAAhB,CAA8B4C,MAAlD,EAA0DD,CAAC,EAA3D,EAA+D;AAC3D,YAAIE,OAAO,GAAG;AACVP,UAAAA,OAAO,EAAEI,CADC;AAEVH,UAAAA,MAAM,EAAEI,CAAC,GAAG,CAFF;AAGV7C,UAAAA,gBAAgB,EAAEY,eAAe,CAACV,aAAhB,CAA8B2C,CAA9B,EAAiC7C,gBAHzC;AAIVT,UAAAA,SAAS,EAAEqB,eAAe,CAACV,aAAhB,CAA8B2C,CAA9B,EAAiCtD;AAJlC,SAAd;AAMAoD,QAAAA,OAAO,CAACK,IAAR,CAAaD,OAAb;AACH;AACJ;;AACDrB,IAAAA,UAAU,mBAAMD,OAAN;AAAevB,MAAAA,aAAa,EAAE,CAAC,GAAGuB,OAAO,CAACvB,aAAZ,EAA2B,GAAGyC,OAA9B;AAA9B,OAAV;AACAhC,IAAAA,iBAAiB,CAAC,CAAD,CAAjB;AACH;;AACD,WAASsC,aAAT,CAAuBC,SAAvB,EAAkC;AAC9BzB,IAAAA,OAAO,CAAC0B,WAAR,GAAsBD,SAAtB;AACA3C,IAAAA,QAAQ,CAAC/C,gBAAgB,CAACiE,OAAD,CAAjB,CAAR;AACAJ,IAAAA,qBAAqB,CAAC,IAAD,CAArB,CAH8B,CAK9B;AACH;;AAED,SACI,0CACK,CAACD,kBAAD,IACG,oBAAC,eAAD;AACI,IAAA,KAAK,EAAE;AACHhD,MAAAA,QAAQ,EAAE,OADP;AAEHgF,MAAAA,GAAG,EAAE,CAFF;AAGHC,MAAAA,IAAI,EAAE,CAHH;AAIH1E,MAAAA,KAAK,EAAE,MAJJ;AAKH2E,MAAAA,MAAM,EAAE,MALL;AAMHC,MAAAA,eAAe,EAAG,oCAAmCjH,MAAM,CAACkH,YAAP,CAAoB,GAApB,CAAyB,KAAIlH,MAAM,CAACkH,YAAP,CAC9E,EAD8E,CAEhF,KAAIlH,MAAM,CAACkH,YAAP,CAAoB,EAApB,CAAwB,KAAIlH,MAAM,CAACmH,eAAP,CAAuB,EAAvB,CAA2B,MAAKnH,MAAM,CAACmH,eAAP,CAAuB,GAAvB,CAA4B;AAR3F,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAYI,oBAAC,gBAAD;AACI,IAAA,OAAO,EAAE,MAAM;AACXjE,MAAAA,yBAAyB,CAAC,KAAD,CAAzB;AACH,KAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKI,oBAAC,eAAD;AAAiB,IAAA,KAAK,EAAE;AAAEpB,MAAAA,QAAQ,EAAE,OAAZ;AAAqBgF,MAAAA,GAAG,EAAE,CAA1B;AAA6BC,MAAAA,IAAI,EAAE,CAAnC;AAAsC1E,MAAAA,KAAK,EAAE,MAA7C;AAAqD2E,MAAAA,MAAM,EAAE;AAA7D,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CAZJ,EAoBI,oBAAC,YAAD;AACI,IAAA,KAAK,EAAE;AACH;AACA;AACAF,MAAAA,GAAG,EAAEzD,UAAU,CAACF,MAAX,CAAkB6D,MAAlB,GAA2B,GAH7B;AAIHI,MAAAA,UAAU,EAAE/D,UAAU,CAACF,MAAX,CAAkBd,KAAlB,GAA0B,GAJnC;AAKHgF,MAAAA,WAAW,EAAEhE,UAAU,CAACF,MAAX,CAAkBd,KAAlB,GAA0B,GALpC;AAMH2E,MAAAA,MAAM,EAAE3D,UAAU,CAACF,MAAX,CAAkB6D,MAAlB,GAA2B,GANhC;AAOHjF,MAAAA,eAAe,EAAE,OAPd;AAQHuF,MAAAA,SAAS,EAAE;AARR,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAYI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAExF,MAAAA,QAAQ,EAAE,UAAZ;AAAwByF,MAAAA,MAAM,EAAE,EAAhC;AAAoClF,MAAAA,KAAK,EAAE,EAA3C;AAA+C2E,MAAAA,MAAM,EAAE,EAAvD;AAA2DQ,MAAAA,KAAK,EAAE;AAAlE,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,WAAD;AACI,IAAA,KAAK,EAAC,OADV;AAEI,IAAA,OAAO,EAAE,MAAM;AACXtE,MAAAA,yBAAyB,CAAC,KAAD,CAAzB;AACH,KAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAZJ,EAqBI,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAE,0BAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArBJ,EAsBI,oBAAC,UAAD;AACI,IAAA,KAAK,EAAE;AACHuE,MAAAA,WAAW,EAAE,EADV;AAEHC,MAAAA,UAAU,EAAE,EAFT;AAGHC,MAAAA,YAAY,EAAE,EAHX;AAIHC,MAAAA,QAAQ,EAAE,MAJP;AAKHC,MAAAA,iBAAiB,EAAE7H,MAAM,CAAC8H,eAAP,CAAuB,EAAvB,CALhB;AAMHC,MAAAA,iBAAiB,EAAE;AANhB,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,aAAa,EAAE,KAAjB;AAAwBC,MAAAA,UAAU,EAAE,QAApC;AAA8CC,MAAAA,aAAa,EAAE;AAA7D,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACjI,OAAO,CAACkI,EAAR,CAAW,OAAX,EAAoB,OAApB,CAAD,EAA+B;AAAE9F,MAAAA,KAAK,EAAE;AAAT,KAA/B,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,EAGI,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAE8C,OAAO,CAACH,IAA5B;AAAkC,IAAA,QAAQ,EAAEoD,KAAK,IAAIhD,UAAU,mBAAMD,OAAN;AAAeH,MAAAA,IAAI,EAAEoD,KAAK,CAACpD;AAA3B,OAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CAVJ,EAeI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEgD,MAAAA,aAAa,EAAE,KAAjB;AAAwBC,MAAAA,UAAU,EAAE,QAApC;AAA8CC,MAAAA,aAAa,EAAE;AAA7D,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACjI,OAAO,CAACkI,EAAR,CAAW,OAAX,EAAoB,OAApB,CAAD,EAA+B;AAAE9F,MAAAA,KAAK,EAAE;AAAT,KAA/B,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADJ,EAEI,oBAAC,YAAD;AACI,IAAA,QAAQ,EAAE+F,KAAK,IAAI;AACfhD,MAAAA,UAAU,mBAAMD,OAAN;AAAeF,QAAAA,SAAS,EAAE,CAACmD;AAA3B,SAAV;AACH,KAHL;AAII,IAAA,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAJV;AAKI,IAAA,MAAM,EAAE,OALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAfJ,EAyBI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEJ,MAAAA,aAAa,EAAE,KAAjB;AAAwBC,MAAAA,UAAU,EAAE,QAApC;AAA8CC,MAAAA,aAAa,EAAE;AAA7D,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACjI,OAAO,CAACkI,EAAR,CAAW,OAAX,EAAoB,OAApB,CAAD,EAA+B;AAAE9F,MAAAA,KAAK,EAAE;AAAT,KAA/B,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADJ,EAEI,oBAAC,YAAD;AACI,IAAA,QAAQ,EAAE+F,KAAK,IAAI;AACfhD,MAAAA,UAAU,mBAAMD,OAAN;AAAeD,QAAAA,UAAU,EAAEkD;AAA3B,SAAV;AACH,KAHL;AAII,IAAA,IAAI,EAAE,CAAC,MAAD,EAAS,QAAT,EAAmB,MAAnB,CAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAQI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ,CARJ,CAzBJ,EAqCI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,cAAD;AACI,IAAA,UAAU,EAAE,CAACnI,OAAO,CAACkI,EAAR,CAAW,OAAX,EAAoB,OAApB,CAAD,CADhB;AAEI,IAAA,KAAK,EAAE,wBAFX;AAGI,IAAA,KAAK,EAAE;AAAEE,MAAAA,QAAQ,EAAE;AAAZ,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEZ,MAAAA,WAAW,EAAE;AAAf,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACxH,OAAO,CAACqI,EAAR,CAAW,OAAX,EAAoB,QAApB,CAAD,EAAgC;AAAEJ,MAAAA,aAAa,EAAE;AAAjB,KAAhC,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cACU,CAAC3E,MAAD,GAAUa,cAAV,GAA2B,WADrC,CADJ,EAII,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACnE,OAAO,CAACqI,EAAR,CAAW,OAAX,EAAoB,QAApB,CAAD,EAAgC;AAAEb,MAAAA,WAAW,EAAE,EAAf;AAAmBS,MAAAA,aAAa,EAAE;AAAlC,KAAhC,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YACQ,GADR,EAEK,CAAC3E,MAAD,GACKW,mBAAmB,GAAGiB,OAAO,CAACF,SAA9B,GACIf,mBADJ,GAEIiB,OAAO,CAACF,SAHjB,GAIK,UANV,CAJJ,CADJ,EAcI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAE+C,MAAAA,aAAa,EAAE,KAAjB;AAAwBC,MAAAA,UAAU,EAAE,QAApC;AAA8CR,MAAAA,WAAW,EAAE,EAA3D;AAA+DS,MAAAA,aAAa,EAAE;AAA9E,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACjI,OAAO,CAACqI,EAAR,CAAW,OAAX,EAAoB,QAApB,CAAD,EAAgC;AAAEjG,MAAAA,KAAK,EAAE;AAAT,KAAhC,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,EAEI,oBAAC,WAAD;AACI,IAAA,KAAK,EAAEmC,cAAc,CAACd,gBAD1B;AAEI,IAAA,QAAQ,EAAE0E,KAAK,IAAI3D,iBAAiB,mBAAMD,cAAN;AAAsBd,MAAAA,gBAAgB,EAAE0E,KAAK,CAACpD;AAA9C,OAFxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAdJ,EAqBI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEgD,MAAAA,aAAa,EAAE,KAAjB;AAAwBC,MAAAA,UAAU,EAAE,QAApC;AAA8CV,MAAAA,MAAM,EAAE,GAAtD;AAA2DE,MAAAA,WAAW,EAAE,EAAxE;AAA4ES,MAAAA,aAAa,EAAE;AAA3F,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACjI,OAAO,CAACqI,EAAR,CAAW,OAAX,EAAoB,QAApB,CAAD,EAAgC;AAAEjG,MAAAA,KAAK,EAAE,GAAT;AAAckG,MAAAA,SAAS,EAAE;AAAzB,KAAhC,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAEI,oBAAC,WAAD;AACI,IAAA,SAAS,EAAE,IADf;AAEI,IAAA,iBAAiB,EAAE,IAFvB;AAGI,IAAA,UAAU,EAAE,IAHhB;AAII,IAAA,OAAO,EAAEtF,SAAS,GAAGA,SAAS,CAACuF,IAAV,CAAeA,IAAlB,GAAyB,EAJ/C;AAKI,IAAA,KAAK,EAAE9D,eAAe,CAACZ,YAL3B;AAMI,IAAA,QAAQ,EAAEsE,KAAK,IACXzD,kBAAkB,mBAAMD,eAAN;AAAuBZ,MAAAA,YAAY,EAAEsE,KAAK,CAACpD,IAA3C;AAAiDyD,MAAAA,UAAU,EAAEL,KAAK,CAACM;AAAnE,OAP1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAaI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACzI,OAAO,CAAC0I,EAAR,CAAW,OAAX,EAAoB,QAApB,CAAD,EAAgC;AAAElB,MAAAA,WAAW,EAAE,CAAf;AAAkBE,MAAAA,YAAY,EAAE,CAAhC;AAAmCY,MAAAA,SAAS,EAAE;AAA9C,KAAhC,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAbJ,EAgBI,oBAAC,aAAD;AACI,IAAA,KAAK,EAAE7D,eAAe,CAACX,OAD3B;AAEI,IAAA,QAAQ,EAAEqE,KAAK,IAAIzD,kBAAkB,mBAAMD,eAAN;AAAuBX,MAAAA,OAAO,EAAEqE;AAAhC,OAFzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBJ,EAoBI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACnI,OAAO,CAAC0I,EAAR,CAAW,OAAX,EAAoB,QAApB,CAAD,EAAgC;AAAElB,MAAAA,WAAW,EAAE,CAAf;AAAkBE,MAAAA,YAAY,EAAE,CAAhC;AAAmCY,MAAAA,SAAS,EAAE;AAA9C,KAAhC,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBApBJ,EAuBI,oBAAC,aAAD;AACI,IAAA,KAAK,EAAE;AAAElB,MAAAA,WAAW,EAAE;AAAf,KADX;AAEI,IAAA,KAAK,EAAE3C,eAAe,CAACV,OAF3B;AAGI,IAAA,QAAQ,EAAEoE,KAAK,IAAIzD,kBAAkB,mBAAMD,eAAN;AAAuBV,MAAAA,OAAO,EAAEoE;AAAhC,OAHzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvBJ,EA4BI,oBAAC,cAAD;AACI,IAAA,KAAK,EAAC,gBADV;AAEI,IAAA,QAAQ,EAAE,CAAC1D,eAAe,CAAC+D,UAAjB,GAA8B,IAA9B,GAAqC,KAFnD;AAGI,IAAA,UAAU,EAAExI,OAAO,CAACqI,EAAR,CAAW,OAAX,EAAoB,QAApB,CAHhB;AAII,IAAA,KAAK,EAAE;AACHhG,MAAAA,OAAO,EAAE,EADN;AAEHqF,MAAAA,YAAY,EAAE,IAFX;AAGHF,MAAAA,WAAW,EAAE,IAHV;AAIHL,MAAAA,UAAU,EAAE,MAJT;AAKHC,MAAAA,WAAW,EAAE,EALV;AAMHuB,MAAAA,SAAS,EAAE;AANR,KAJX;AAYI,IAAA,OAAO,EAAE,MAAM;AACX,UAAIlE,eAAe,CAAC+D,UAApB,EAAgC;AAC5BhE,QAAAA,iBAAiB,mBACVD,cADU;AAEbvB,UAAAA,SAAS,EAAE,CAAC,GAAGuB,cAAc,CAACvB,SAAnB,EAA8ByB,eAA9B;AAFE,WAAjB;AAIAC,QAAAA,kBAAkB,CAAC;AAAEb,UAAAA,YAAY,EAAE,EAAhB;AAAoBC,UAAAA,OAAO,EAAE,CAA7B;AAAgCC,UAAAA,OAAO,EAAE;AAAzC,SAAD,CAAlB;AACH;AACJ,KApBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA5BJ,CArBJ,EA0EI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAE0D,MAAAA,UAAU,EAAE;AAAd,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,cAAD;AAAgB,IAAA,UAAU,EAAEzH,OAAO,CAACqI,EAAR,CAAW,IAAX,EAAiB,QAAjB,CAA5B;AAAwD,IAAA,KAAK,EAAE,eAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEN,MAAAA,aAAa,EAAE;AAAjB,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAE3F,MAAAA,KAAK,EAAE,EAAT;AAAagF,MAAAA,WAAW,EAAE;AAA1B,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEwB,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,cAAc,EAAE;AAA3B,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AACI,IAAA,KAAK,EAAE;AACHzG,MAAAA,KAAK,EAAE,CADJ;AAEH2E,MAAAA,MAAM,EAAE,EAFL;AAGHjF,MAAAA,eAAe,EACXqC,cAAc,GAAG,CAAjB,GAAqBpE,MAAM,CAACmH,eAAP,EAArB,GAAgDnH,MAAM,CAAC+I,SAAP,EAJjD;AAKHC,MAAAA,mBAAmB,EAAE,CALlB;AAMHC,MAAAA,oBAAoB,EAAE;AANnB,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAWI,oBAAC,IAAD;AACI,IAAA,KAAK,EAAE;AACH5G,MAAAA,KAAK,EAAE,CADJ;AAEH2E,MAAAA,MAAM,EAAE,EAFL;AAGHjF,MAAAA,eAAe,EACXqC,cAAc,GAAG,CAAjB,GAAqBpE,MAAM,CAACmH,eAAP,EAArB,GAAgDnH,MAAM,CAAC+I,SAAP;AAJjD,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXJ,EAmBI,oBAAC,IAAD;AACI,IAAA,KAAK,EAAE;AACH1G,MAAAA,KAAK,EAAE,CADJ;AAEH2E,MAAAA,MAAM,EAAE,EAFL;AAGHjF,MAAAA,eAAe,EACXqC,cAAc,GAAG,CAAjB,GAAqBpE,MAAM,CAACmH,eAAP,EAArB,GAAgDnH,MAAM,CAAC+I,SAAP;AAJjD,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBJ,EA2BI,oBAAC,IAAD;AACI,IAAA,KAAK,EAAE;AACH1G,MAAAA,KAAK,EAAE,CADJ;AAEH2E,MAAAA,MAAM,EAAE,EAFL;AAGHjF,MAAAA,eAAe,EACXqC,cAAc,GAAG,CAAjB,GAAqBpE,MAAM,CAACmH,eAAP,EAArB,GAAgDnH,MAAM,CAAC+I,SAAP,EAJjD;AAKHG,MAAAA,sBAAsB,EAAE,CALrB;AAMHC,MAAAA,uBAAuB,EAAE;AANtB,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA3BJ,CADJ,CADJ,EAyCI,oBAAC,IAAD;AACI,IAAA,KAAK,EAAE;AACHN,MAAAA,IAAI,EAAE,CADH;AAEHC,MAAAA,cAAc,EAAE,YAFb;AAGHd,MAAAA,aAAa,EAAE,KAHZ;AAIHJ,MAAAA,QAAQ,EAAE,MAJP;AAKHP,MAAAA,WAAW,EAAE;AALV,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASK/C,eAAe,CAACV,aAAhB,CAA8BwF,GAA9B,CAAkC,CAACC,YAAD,EAAepD,KAAf,KAAyB;AACxD,WACI,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,KAAX;AAAkB,MAAA,KAAK,EAAE;AAAEgC,QAAAA,UAAU,EAAE,QAAd;AAAwBZ,QAAAA,WAAW,EAAE;AAArC,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE,CAACpH,OAAO,CAACqJ,EAAR,CAAW,OAAX,EAAoB,MAApB,CAAD,EAA8B;AAAEpB,QAAAA,aAAa,EAAE;AAAjB,OAA9B,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACSjC,KAAK,GAAG,CADjB,CADJ,EAII,oBAAC,WAAD;AACI,MAAA,SAAS,EAAE,IADf;AAEI,MAAA,IAAI,EAAE,CAFV;AAGI,MAAA,IAAI,EAAE,IAHV;AAII,MAAA,IAAI,EAAE,KAJV;AAKI,MAAA,YAAY,EAAEoD,YAAY,CAAC3F,gBAL/B;AAMI,MAAA,KAAK,EAAE;AAAErB,QAAAA,KAAK,EAAE,GAAT;AAAc2E,QAAAA,MAAM,EAAE,GAAtB;AAA2BuC,QAAAA,YAAY,EAAE;AAAzC,OANX;AAOI,MAAA,WAAW,EAAE,KAPjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CADJ;AAgBH,GAjBA,CATL,EA2BKjF,eAAe,CAACV,aAAhB,CAA8B4C,MAA9B,KAAyCrB,OAAO,CAACF,SAAjD,IACG,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEgD,MAAAA,UAAU,EAAE;AAAd,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAAChI,OAAO,CAACqJ,EAAR,CAAW,OAAX,EAAoB,MAApB,CAAD,EAA8B;AAAEpB,MAAAA,aAAa,EAAE;AAAjB,KAA9B,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACS5D,eAAe,CAACV,aAAhB,CAA8B4C,MAA9B,GAAuC,CADhD,CADJ,EAII,oBAAC,cAAD;AACI,IAAA,KAAK,EAAE;AACHnE,MAAAA,KAAK,EAAE,GADJ;AAEH2E,MAAAA,MAAM,EAAE,GAFL;AAGHuC,MAAAA,YAAY,EAAE,EAHX;AAIH1H,MAAAA,YAAY,EAAE,CAJX;AAKHS,MAAAA,OAAO,EAAE;AALN,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKkC,cAAc,CAACvB,SAAf,CAAyBuD,MAAzB,KAAoC,CAApC,IACG,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACvG,OAAO,CAAC0I,EAAR,CAAW,IAAX,EAAiB,QAAjB,CAAD,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,GADL,4BAE2B,GAF3B,CADJ,CAFR,EASKnE,cAAc,CAACvB,SAAf,CAAyBmG,GAAzB,CAA6B,CAAC1D,QAAD,EAAWO,KAAX,KAAqB;AAC/C,WACI,oBAAC,aAAD;AACI,MAAA,GAAG,EAAEA,KADT;AAEI,MAAA,OAAO,EAAE,MAAMR,mBAAmB,CAACC,QAAD,CAFtC;AAGI,MAAA,KAAK,EAAG,GAAEA,QAAQ,CAAC5B,YAAa,IAAG4B,QAAQ,CAAC3B,OAAQ,aAAY2B,QAAQ,CAAC1B,OAAQ,OAHrF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAOH,GARA,CATL,CATJ,CAJJ,CA5BR,CAzCJ,EA0GI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAE4E,MAAAA,SAAS,EAAE;AAAb,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,cAAD;AACI,IAAA,KAAK,EAAE;AAAEtG,MAAAA,OAAO,EAAE,EAAX;AAAeiH,MAAAA,YAAY,EAAE;AAA7B,KADX;AAEI,IAAA,KAAK,EAAE,mBAFX;AAGI,IAAA,UAAU,EAAEtJ,OAAO,CAACqI,EAAR,CAAW,OAAX,EAAoB,QAApB,CAHhB;AAII,IAAA,QAAQ,EACJhE,eAAe,CAACV,aAAhB,CAA8B4C,MAA9B,KAAyCrB,OAAO,CAACF,SAAjD,IACAT,cAAc,CAACd,gBAAf,IAAmC,EADnC,IAEAc,cAAc,CAACvB,SAAf,CAAyBuD,MAAzB,GAAkC,CAFlC,GAGM,KAHN,GAIM,IATd;AAWI,IAAA,OAAO,EAAE,MAAM;AACXjC,MAAAA,kBAAkB,CAAC;AACfX,QAAAA,aAAa,EAAE,CAAC,GAAGU,eAAe,CAACV,aAApB,EAAmCY,cAAnC;AADA,OAAD,CAAlB;AAGAC,MAAAA,iBAAiB,CAAChB,cAAD,CAAjB;AACAU,MAAAA,sBAAsB,CAACD,mBAAmB,GAAG,CAAvB,CAAtB;AACH,KAjBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAmBK,GAnBL,CADJ,EAsBI,oBAAC,cAAD;AACI,IAAA,KAAK,EAAE;AAAE5B,MAAAA,OAAO,EAAE,EAAX;AAAeiH,MAAAA,YAAY,EAAE;AAA7B,KADX;AAEI,IAAA,UAAU,EAAEtJ,OAAO,CAACqI,EAAR,CAAW,OAAX,EAAoB,QAApB,CAFhB;AAGI,IAAA,KAAK,EAAE,sBAHX;AAII,IAAA,QAAQ,EAAEhE,eAAe,CAACV,aAAhB,CAA8B4C,MAA9B,KAAyCrB,OAAO,CAACF,SAAjD,GAA6D1B,MAA7D,GAAsE,IAJpF;AAKI,IAAA,OAAO,EAAE,MAAM6C,iBAAiB,EALpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtBJ,EA6BI,oBAAC,cAAD;AACI,IAAA,KAAK,EAAE;AAAE9D,MAAAA,OAAO,EAAE,EAAX;AAAemF,MAAAA,WAAW,EAAE,EAA5B;AAAgCE,MAAAA,YAAY,EAAE;AAA9C,KADX;AAEI,IAAA,UAAU,EAAE1H,OAAO,CAACqI,EAAR,CAAW,OAAX,EAAoB,QAApB,CAFhB;AAGI,IAAA,KAAK,EAAE,2BAHX;AAII,IAAA,QAAQ,EAAEhE,eAAe,CAACV,aAAhB,CAA8B4C,MAA9B,KAAyCrB,OAAO,CAACF,SAAjD,GAA6D1B,MAA7D,GAAsE,IAJpF;AAKI,IAAA,OAAO,EAAE,MAAMsC,mBAAmB,EALtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA7BJ,CA1GJ,CADJ,CADJ,CA1EJ,CALJ,CADJ,CArCJ,CAtBJ,EAmSI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEmC,MAAAA,aAAa,EAAE,KAAjB;AAAwBY,MAAAA,SAAS,EAAE,UAAnC;AAA+CtG,MAAAA,OAAO,EAAE,EAAxD;AAA4D+E,MAAAA,WAAW,EAAE;AAAzE,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,cAAD;AACI,IAAA,KAAK,EAAE,gBADX;AAEI,IAAA,KAAK,EAAE;AAAExF,MAAAA,YAAY,EAAE,CAAhB;AAAmB4F,MAAAA,WAAW,EAAE,EAAhC;AAAoCE,MAAAA,YAAY,EAAE,EAAlD;AAAsDD,MAAAA,UAAU,EAAE,EAAlE;AAAsEQ,MAAAA,aAAa,EAAE;AAArF,KAFX;AAGI,IAAA,KAAK,EAAElI,MAAM,CAACwJ,WAAP,EAHX;AAII,IAAA,QAAQ,EAAE,CAACjG,MAAD,IAAW,CAAC4B,OAAO,CAACH,IAJlC;AAKI,IAAA,OAAO,EAAE,MAAM;AACXH,MAAAA,aAAa,CAAC,IAAD,CAAb;AACH,KAPL;AAQI,IAAA,SAAS,EAAE,IARf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAWI,oBAAC,0BAAD;AACI,IAAA,IAAI,EAAED,UADV;AAEI,IAAA,WAAW,EAAE,MAAM+B,aAAa,CAAC,KAAD,CAFpC;AAGI,IAAA,aAAa,EAAE,MAAMA,aAAa,CAAC,IAAD,CAHtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXJ,CAnSJ,CApBJ,CAFR,EA6UK7B,kBAAkB,IACf,oBAAC,eAAD;AACI,IAAA,KAAK,EAAE;AACHhD,MAAAA,QAAQ,EAAE,OADP;AAEHgF,MAAAA,GAAG,EAAE,CAFF;AAGHC,MAAAA,IAAI,EAAE,CAHH;AAIH1E,MAAAA,KAAK,EAAE,MAJJ;AAKH2E,MAAAA,MAAM,EAAE,MALL;AAMHC,MAAAA,eAAe,EAAG,oCAAmCjH,MAAM,CAACkH,YAAP,CAAoB,GAApB,CAAyB,KAAIlH,MAAM,CAACkH,YAAP,CAC9E,EAD8E,CAEhF,KAAIlH,MAAM,CAACkH,YAAP,CAAoB,EAApB,CAAwB,KAAIlH,MAAM,CAACmH,eAAP,CAAuB,EAAvB,CAA2B,MAAKnH,MAAM,CAACmH,eAAP,CAAuB,GAAvB,CAA4B;AAR3F,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAYI,oBAAC,gBAAD;AACI,IAAA,OAAO,EAAE,MAAM;AACXjE,MAAAA,yBAAyB,CAAC,KAAD,CAAzB;AACH,KAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKI,oBAAC,eAAD;AAAiB,IAAA,KAAK,EAAE;AAAEpB,MAAAA,QAAQ,EAAE,OAAZ;AAAqBgF,MAAAA,GAAG,EAAE,CAA1B;AAA6BC,MAAAA,IAAI,EAAE,CAAnC;AAAsC1E,MAAAA,KAAK,EAAE,MAA7C;AAAqD2E,MAAAA,MAAM,EAAE;AAA7D,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CAZJ,EAmBI,oBAAC,IAAD;AACI,IAAA,KAAK,EAAE;AACH8B,MAAAA,cAAc,EAAE,QADb;AAEHW,MAAAA,MAAM,EAAE,MAFL;AAGHxB,MAAAA,UAAU,EAAE,QAHT;AAIHlG,MAAAA,eAAe,EAAE,OAJd;AAKHM,MAAAA,KAAK,EAAE,GALJ;AAMHiF,MAAAA,SAAS,EAAE;AANR,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEwB,MAAAA,cAAc,EAAE,QAAlB;AAA4Bb,MAAAA,UAAU,EAAE,QAAxC;AAAkD3F,MAAAA,OAAO,EAAE;AAA3D,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACrC,OAAO,CAACqJ,EAAR,CAAW,OAAX,CAAD,EAAsB;AAAEhH,MAAAA,OAAO,EAAE;AAAX,KAAtB,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDADJ,EAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACrC,OAAO,CAACqI,EAAR,EAAD,EAAe;AAAEhG,MAAAA,OAAO,EAAE;AAAX,KAAf,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,GADL,mTAI8E,GAJ9E,CAFJ,EAQI,oBAAC,mBAAD;AACI,IAAA,KAAK,EAAE,UADX;AAEI,IAAA,OAAO,EAAE,MAAM;AACXY,MAAAA,yBAAyB,CAAC,KAAD,CAAzB;AACH,KAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,CAVJ,CAnBJ,CA9UR,CADJ;AAgYH","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, Text, ScrollView, TouchableOpacity, ImageBackground, Button, Dimensions, SafeAreaView } from 'react-native';\nimport { colors, headers } from 'styles';\nimport { InputBase, TextField, FormControl, InputLabel, MenuItem, Select, withStyles } from '@material-ui/core';\nimport CustomSelect from '../CustomSelect';\nimport CustomInput from 'module/components/CustomInput';\nimport TitledGroupBox from '../TitledGroupBox';\nimport CustomCounter from 'module/components/CustomCounter';\nimport StandardButton from '../buttons/StandardButton';\nimport CloseButton from '../buttons/CloseButton';\nimport WhiteOutlinedButton from 'module/components/buttons/WhiteOutlinedButton';\n\nimport CalendarDay from 'module/components/CalendarDay';\nimport ExerciseEntry from '../ExerciseEntry';\nimport { newWorkoutAction } from 'redux/actions/data.actions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ModalTitle from 'module/components/modals/components/ModalTitle';\nimport ConfirmDialogCreateWorkout from './ConfirmDialogCreateWorkout';\n\nconst BootstrapInput = withStyles(theme => ({\n    root: {\n        'label + &': {\n            marginTop: theme.spacing(3),\n        },\n    },\n    input: {\n        borderRadius: 4,\n        position: 'relative',\n        backgroundColor: theme.palette.common.white,\n        border: '1px solid #ced4da',\n        fontSize: 16,\n        width: 'auto',\n        padding: '10px 12px',\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\n        // Use the system font instead of the default Roboto font.\n        fontFamily: [\n            '-apple-system',\n            'BlinkMacSystemFont',\n            '\"Segoe UI\"',\n            'Roboto',\n            '\"Helvetica Neue\"',\n            'Arial',\n            'sans-serif',\n            '\"Apple Color Emoji\"',\n            '\"Segoe UI Emoji\"',\n            '\"Segoe UI Symbol\"',\n        ].join(','),\n        '&:focus': {\n            // boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 0.2rem`,\n            borderColor: theme.palette.primary.main,\n        },\n    },\n}))(InputBase);\nexport default function CreateWorkoutModal({ history, exercises, setCreateWorkoutModalOpen }) {\n    const window = Dimensions.get('window');\n\n    const [dimensions, setDimensions] = useState({ window });\n    const [locked, setLocked] = useState(false);\n\n    let defaultDayInfo = {\n        dailyWorkoutName: '',\n        exercises: [],\n    };\n    let defaultWeekInfo = {\n        dailyWorkouts: [],\n    };\n    let defaultExercise = {\n        exerciseName: '',\n        numSets: 1,\n        numReps: 1,\n    };\n\n    const dispatch = useDispatch();\n\n    const [currentDayInWeekNum, setCurrentDayInWeekNum] = useState(1);\n    const [currentWeekNum, setCurrentWeekNum] = useState(1);\n    const [currentWeekInfo, setCurrentWeekInfo] = useState(defaultWeekInfo);\n    const [currentDayInfo, setCurrentDayInfo] = useState(defaultDayInfo);\n    const [currentExercise, setCurrentExercise] = useState(defaultExercise);\n    const [openDialog, setOpenDialog] = useState(false);\n    const [workoutIsSubmitted, setWorkoutIsSubmitted] = useState(false);\n\n    const [workout, setWorkout] = useState({\n        name: '',\n        frequency: 3,\n        difficulty: 'easy',\n\n        dailyWorkouts: [],\n    });\n\n    const onChange = ({ window, screen }) => {\n        setDimensions({ window });\n    };\n\n    useEffect(() => {\n        Dimensions.addEventListener('change', onChange);\n        return () => {\n            Dimensions.removeEventListener('change', onChange);\n        };\n    });\n\n    useEffect(() => {\n        // console.log(' CURRENT WEEEK NUMERO IS ');\n\n        // console.log(currentWeekNum);\n        if (currentWeekNum > 4) {\n            setLocked(true);\n        }\n    }, [currentWeekNum]);\n    // console.log(currentWeekInfo.dailyWorkouts.length + ' ' + workout.frequency);\n\n    function handleExerciseClose(exercise) {\n        currentDayInfo.exercises.splice(currentDayInfo.exercises.indexOf(exercise), 1);\n        setCurrentDayInfo({\n            ...currentDayInfo,\n            exercises: [...currentDayInfo.exercises],\n        });\n    }\n\n    function handleCreateNewWeek() {\n        let weekInfo = currentWeekInfo.dailyWorkouts;\n        weekInfo.forEach((el, index) => {\n            el.weekNum = currentWeekNum;\n            el.dayNum = index + 1;\n        });\n        setWorkout({ ...workout, dailyWorkouts: [...workout.dailyWorkouts, ...weekInfo] });\n        setCurrentWeekNum(currentWeekNum + 1);\n        setCurrentWeekInfo(defaultWeekInfo);\n        setCurrentDayInWeekNum(1);\n    }\n\n    function repeatForAllWeeks() {\n        let allDays = [];\n        for (let i = currentWeekNum; i <= 4; i++) {\n            for (let j = 0; j < currentWeekInfo.dailyWorkouts.length; j++) {\n                let dayInfo = {\n                    weekNum: i,\n                    dayNum: j + 1,\n                    dailyWorkoutName: currentWeekInfo.dailyWorkouts[j].dailyWorkoutName,\n                    exercises: currentWeekInfo.dailyWorkouts[j].exercises,\n                };\n                allDays.push(dayInfo);\n            }\n        }\n        setWorkout({ ...workout, dailyWorkouts: [...workout.dailyWorkouts, ...allDays] });\n        setCurrentWeekNum(5);\n    }\n    function createWorkout(published) {\n        workout.isPublished = published;\n        dispatch(newWorkoutAction(workout));\n        setWorkoutIsSubmitted(true);\n\n        // setCreateWorkoutModalOpen(false);\n    }\n\n    return (\n        <>\n            {!workoutIsSubmitted && (\n                <ImageBackground\n                    style={{\n                        position: 'fixed',\n                        top: 0,\n                        left: 0,\n                        width: '100%',\n                        height: '100%',\n                        backgroundImage: `linear-gradient(to bottom right, ${colors.themePrimary(100)}, ${colors.themePrimary(\n                            50\n                        )}, ${colors.themePrimary(70)}, ${colors.themeSecoundary(50)},  ${colors.themeSecoundary(100)} )`,\n                    }}\n                >\n                    <TouchableOpacity\n                        onPress={() => {\n                            setCreateWorkoutModalOpen(false);\n                        }}\n                    >\n                        <ImageBackground style={{ position: 'fixed', top: 0, left: 0, width: '100%', height: '100%' }} />\n                    </TouchableOpacity>\n\n                    <SafeAreaView\n                        style={{\n                            // width: '80%',\n                            // height: '80%',\n                            top: dimensions.window.height * 0.1,\n                            marginLeft: dimensions.window.width * 0.1,\n                            marginRight: dimensions.window.width * 0.1,\n                            height: dimensions.window.height * 0.8,\n                            backgroundColor: 'white',\n                            boxShadow: '-10px 12px 11px -1px rgba(0,0,0,0.2)',\n                        }}\n                    >\n                        <View style={{ position: 'absolute', zIndex: 99, width: 55, height: 55, right: 0 }}>\n                            <CloseButton\n                                title=\"close\"\n                                onPress={() => {\n                                    setCreateWorkoutModalOpen(false);\n                                }}\n                            ></CloseButton>\n                        </View>\n\n                        <ModalTitle title={'Create your workout plan'} />\n                        <ScrollView\n                            style={{\n                                paddingLeft: 45,\n                                paddingTop: 30,\n                                paddingRight: 40,\n                                overflow: 'auto',\n                                borderBottomColor: colors.borderGrayColor(30),\n                                borderBottomWidth: 1,\n                            }}\n                        >\n                            <View style={{ flexDirection: 'row', alignItems: 'center', paddingBottom: 20 }}>\n                                <Text style={[headers.H4('black', 'Light'), { width: 230 }]}>1. Your workout name: </Text>\n\n                                <CustomInput value={workout.name} setValue={value => setWorkout({ ...workout, name: value.name })} />\n                            </View>\n                            <View style={{ flexDirection: 'row', alignItems: 'center', paddingBottom: 20 }}>\n                                <Text style={[headers.H4('black', 'Light'), { width: 230 }]}>2. Choose your frequency: </Text>\n                                <CustomSelect\n                                    onChange={value => {\n                                        setWorkout({ ...workout, frequency: +value });\n                                    }}\n                                    data={[3, 4, 5]}\n                                    suffix={' days'}\n                                ></CustomSelect>\n                            </View>\n                            <View style={{ flexDirection: 'row', alignItems: 'center', paddingBottom: 40 }}>\n                                <Text style={[headers.H4('black', 'Light'), { width: 230 }]}>3. Choose the difficulty: </Text>\n                                <CustomSelect\n                                    onChange={value => {\n                                        setWorkout({ ...workout, difficulty: value });\n                                    }}\n                                    data={['easy', 'medium', 'hard']}\n                                ></CustomSelect>\n                                <View>\n                                    <Text> </Text>\n                                </View>\n                            </View>\n                            <View>\n                                <TitledGroupBox\n                                    titleStyle={[headers.H4('black', 'Light')]}\n                                    title={'4. Create your workout'}\n                                    style={{ minWidth: 820 }}\n                                >\n                                    <View>\n                                        <View style={{ paddingLeft: 25 }}>\n                                            <Text style={[headers.H5('black', 'Italic'), { paddingBottom: 15 }]}>\n                                                Week {!locked ? currentWeekNum : ' [filled]'}\n                                            </Text>\n                                            <Text style={[headers.H5('black', 'Italic'), { paddingLeft: 25, paddingBottom: 15 }]}>\n                                                Day{' '}\n                                                {!locked\n                                                    ? currentDayInWeekNum < workout.frequency\n                                                        ? currentDayInWeekNum\n                                                        : workout.frequency\n                                                    : '[filled]'}\n                                            </Text>\n                                        </View>\n                                        <View style={{ flexDirection: 'row', alignItems: 'center', paddingLeft: 60, paddingBottom: 15 }}>\n                                            <Text style={[headers.H5('black', 'Medium'), { width: 160 }]}> Daily workout title: </Text>\n                                            <CustomInput\n                                                value={currentDayInfo.dailyWorkoutName}\n                                                setValue={value => setCurrentDayInfo({ ...currentDayInfo, dailyWorkoutName: value.name })}\n                                            />\n                                        </View>\n                                        <View style={{ flexDirection: 'row', alignItems: 'center', zIndex: 999, paddingLeft: 60, paddingBottom: 15 }}>\n                                            <Text style={[headers.H5('black', 'Medium'), { width: 160, textAlign: 'left' }]}> Add exercise: </Text>\n                                            <CustomInput\n                                                hasSearch={true}\n                                                hasTextAndPicture={true}\n                                                hasOptions={true}\n                                                options={exercises ? exercises.data.data : []}\n                                                value={currentExercise.exerciseName}\n                                                setValue={value =>\n                                                    setCurrentExercise({ ...currentExercise, exerciseName: value.name, exerciseId: value.id })\n                                                }\n                                            ></CustomInput>\n\n                                            <Text style={[headers.H6('black', 'Medium'), { paddingLeft: 8, paddingRight: 8, textAlign: 'center' }]}>\n                                                # of sets\n                                            </Text>\n                                            <CustomCounter\n                                                value={currentExercise.numSets}\n                                                setValue={value => setCurrentExercise({ ...currentExercise, numSets: value })}\n                                            ></CustomCounter>\n                                            <Text style={[headers.H6('black', 'Medium'), { paddingLeft: 8, paddingRight: 8, textAlign: 'center' }]}>\n                                                # of reps\n                                            </Text>\n                                            <CustomCounter\n                                                style={{ marginRight: 10 }}\n                                                value={currentExercise.numReps}\n                                                setValue={value => setCurrentExercise({ ...currentExercise, numReps: value })}\n                                            ></CustomCounter>\n                                            <StandardButton\n                                                title=\"Enter exercise\"\n                                                disabled={!currentExercise.exerciseId ? true : false}\n                                                titleStyle={headers.H5('white', 'Medium')}\n                                                style={{\n                                                    padding: 10,\n                                                    paddingRight: '2%',\n                                                    paddingLeft: '2%',\n                                                    marginLeft: 'auto',\n                                                    marginRight: 10,\n                                                    alignSelf: 'flex-end',\n                                                }}\n                                                onPress={() => {\n                                                    if (currentExercise.exerciseId) {\n                                                        setCurrentDayInfo({\n                                                            ...currentDayInfo,\n                                                            exercises: [...currentDayInfo.exercises, currentExercise],\n                                                        });\n                                                        setCurrentExercise({ exerciseName: '', numSets: 1, numReps: 1 });\n                                                    }\n                                                }}\n                                            ></StandardButton>\n                                            {/* <StandardButton */}\n                                        </View>\n\n                                        <View style={{ paddingTop: 20 }}>\n                                            <TitledGroupBox titleStyle={headers.H5(null, 'Italic')} title={'Weeks preview'}>\n                                                <View style={{ flexDirection: 'row' }}>\n                                                    <View style={{ width: 20, marginRight: 10 }}>\n                                                        <View style={{ flex: 1, justifyContent: 'space-between' }}>\n                                                            <View\n                                                                style={{\n                                                                    width: 6,\n                                                                    height: 35,\n                                                                    backgroundColor:\n                                                                        currentWeekNum > 1 ? colors.themeSecoundary() : colors.themeDull(),\n                                                                    borderTopLeftRadius: 3,\n                                                                    borderTopRightRadius: 3,\n                                                                }}\n                                                            ></View>\n                                                            <View\n                                                                style={{\n                                                                    width: 6,\n                                                                    height: 35,\n                                                                    backgroundColor:\n                                                                        currentWeekNum > 2 ? colors.themeSecoundary() : colors.themeDull(),\n                                                                }}\n                                                            ></View>\n                                                            <View\n                                                                style={{\n                                                                    width: 6,\n                                                                    height: 35,\n                                                                    backgroundColor:\n                                                                        currentWeekNum > 3 ? colors.themeSecoundary() : colors.themeDull(),\n                                                                }}\n                                                            ></View>\n                                                            <View\n                                                                style={{\n                                                                    width: 6,\n                                                                    height: 35,\n                                                                    backgroundColor:\n                                                                        currentWeekNum > 4 ? colors.themeSecoundary() : colors.themeDull(),\n                                                                    borderBottomLeftRadius: 3,\n                                                                    borderBottomRightRadius: 3,\n                                                                }}\n                                                            ></View>\n                                                        </View>\n                                                    </View>\n                                                    <View\n                                                        style={{\n                                                            flex: 1,\n                                                            justifyContent: 'flex-start',\n                                                            flexDirection: 'row',\n                                                            overflow: 'auto',\n                                                            marginRight: 20,\n                                                        }}\n                                                    >\n                                                        {currentWeekInfo.dailyWorkouts.map((dailyWorkout, index) => {\n                                                            return (\n                                                                <View key={index} style={{ alignItems: 'center', marginRight: 10 }}>\n                                                                    <Text style={[headers.H2('black', 'Thin'), { paddingBottom: 10 }]}>\n                                                                        Day {index + 1}\n                                                                    </Text>\n                                                                    <CalendarDay\n                                                                        prototype={true}\n                                                                        date={1}\n                                                                        done={true}\n                                                                        rest={false}\n                                                                        workoutTitle={dailyWorkout.dailyWorkoutName}\n                                                                        style={{ width: 140, height: 140, marginBottom: 10 }}\n                                                                        currentWeek={false}\n                                                                    ></CalendarDay>\n                                                                </View>\n                                                            );\n                                                        })}\n                                                        {currentWeekInfo.dailyWorkouts.length !== workout.frequency && (\n                                                            <View style={{ alignItems: 'center' }}>\n                                                                <Text style={[headers.H2('black', 'Thin'), { paddingBottom: 10 }]}>\n                                                                    Day {currentWeekInfo.dailyWorkouts.length + 1}\n                                                                </Text>\n                                                                <TitledGroupBox\n                                                                    style={{\n                                                                        width: 330,\n                                                                        height: 140,\n                                                                        marginBottom: 10,\n                                                                        borderRadius: 5,\n                                                                        padding: 15,\n                                                                    }}\n                                                                >\n                                                                    <ScrollView>\n                                                                        {currentDayInfo.exercises.length === 0 && (\n                                                                            <View>\n                                                                                <Text style={[headers.H6(null, 'Italic')]}>\n                                                                                    {' '}\n                                                                                    No exercises added yet{' '}\n                                                                                </Text>\n                                                                            </View>\n                                                                        )}\n                                                                        {currentDayInfo.exercises.map((exercise, index) => {\n                                                                            return (\n                                                                                <ExerciseEntry\n                                                                                    key={index}\n                                                                                    onClose={() => handleExerciseClose(exercise)}\n                                                                                    title={`${exercise.exerciseName} ${exercise.numSets} sets for ${exercise.numReps} reps`}\n                                                                                ></ExerciseEntry>\n                                                                            );\n                                                                        })}\n                                                                    </ScrollView>\n                                                                </TitledGroupBox>\n                                                            </View>\n                                                        )}\n                                                    </View>\n\n                                                    <View style={{ alignSelf: 'center' }}>\n                                                        <StandardButton\n                                                            style={{ padding: 10, marginBottom: 10 }}\n                                                            title={'Enter day workout'}\n                                                            titleStyle={headers.H5('white', 'Medium')}\n                                                            disabled={\n                                                                currentWeekInfo.dailyWorkouts.length !== workout.frequency &&\n                                                                currentDayInfo.dailyWorkoutName != '' &&\n                                                                currentDayInfo.exercises.length > 0\n                                                                    ? false\n                                                                    : true\n                                                            }\n                                                            onPress={() => {\n                                                                setCurrentWeekInfo({\n                                                                    dailyWorkouts: [...currentWeekInfo.dailyWorkouts, currentDayInfo],\n                                                                });\n                                                                setCurrentDayInfo(defaultDayInfo);\n                                                                setCurrentDayInWeekNum(currentDayInWeekNum + 1);\n                                                            }}\n                                                        >\n                                                            {' '}\n                                                        </StandardButton>\n                                                        <StandardButton\n                                                            style={{ padding: 10, marginBottom: 10 }}\n                                                            titleStyle={headers.H5('white', 'Medium')}\n                                                            title={'Repeat for all weeks'}\n                                                            disabled={currentWeekInfo.dailyWorkouts.length === workout.frequency ? locked : true}\n                                                            onPress={() => repeatForAllWeeks()}\n                                                        ></StandardButton>\n                                                        <StandardButton\n                                                            style={{ padding: 10, paddingLeft: 20, paddingRight: 20 }}\n                                                            titleStyle={headers.H5('white', 'Medium')}\n                                                            title={'Enter and create new week'}\n                                                            disabled={currentWeekInfo.dailyWorkouts.length === workout.frequency ? locked : true}\n                                                            onPress={() => handleCreateNewWeek()}\n                                                        ></StandardButton>\n                                                    </View>\n                                                </View>\n                                            </TitledGroupBox>\n                                        </View>\n                                    </View>\n                                </TitledGroupBox>\n                            </View>\n                        </ScrollView>\n                        <View style={{ flexDirection: 'row', alignSelf: 'flex-end', padding: 20, marginRight: 25 }}>\n                            <StandardButton\n                                title={'Submit workout'}\n                                style={{ borderRadius: 5, paddingLeft: 40, paddingRight: 40, paddingTop: 12, paddingBottom: 12 }}\n                                color={colors.themeActive()}\n                                disabled={!locked || !workout.name}\n                                onPress={() => {\n                                    setOpenDialog(true);\n                                }}\n                                hasShadow={true}\n                            ></StandardButton>\n                            <ConfirmDialogCreateWorkout\n                                open={openDialog}\n                                handleClose={() => createWorkout(false)}\n                                handleConfirm={() => createWorkout(true)}\n                            ></ConfirmDialogCreateWorkout>\n                        </View>\n                    </SafeAreaView>\n                </ImageBackground>\n            )}\n            {workoutIsSubmitted && (\n                <ImageBackground\n                    style={{\n                        position: 'fixed',\n                        top: 0,\n                        left: 0,\n                        width: '100%',\n                        height: '100%',\n                        backgroundImage: `linear-gradient(to bottom right, ${colors.themePrimary(100)}, ${colors.themePrimary(\n                            50\n                        )}, ${colors.themePrimary(70)}, ${colors.themeSecoundary(50)},  ${colors.themeSecoundary(100)} )`,\n                    }}\n                >\n                    <TouchableOpacity\n                        onPress={() => {\n                            setCreateWorkoutModalOpen(false);\n                        }}\n                    >\n                        <ImageBackground style={{ position: 'fixed', top: 0, left: 0, width: '100%', height: '100%' }} />\n                    </TouchableOpacity>\n                    <View\n                        style={{\n                            justifyContent: 'center',\n                            margin: 'auto',\n                            alignItems: 'center',\n                            backgroundColor: 'white',\n                            width: 700,\n                            boxShadow: '-10px 12px 11px -1px rgba(0,0,0,0.2)',\n                        }}\n                    >\n                        <View style={{ justifyContent: 'center', alignItems: 'center', padding: 30 }}>\n                            <Text style={[headers.H2('black'), { padding: 20 }]}> You have just created a new workout plan! </Text>\n                            <Text style={[headers.H5(), { padding: 20 }]}>\n                                {' '}\n                                You have successfully created a new workout plan. You can choose to subscribe to the workout plan you have just\n                                created or other workout plans by opening the choose workout modal. If you published this workout plan we will also\n                                keep statistics and notify you when users subscribe to your workout plan!{' '}\n                            </Text>\n                            <WhiteOutlinedButton\n                                title={'Continue'}\n                                onPress={() => {\n                                    setCreateWorkoutModalOpen(false);\n                                }}\n                            ></WhiteOutlinedButton>\n                        </View>\n                    </View>\n                </ImageBackground>\n            )}\n        </>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}
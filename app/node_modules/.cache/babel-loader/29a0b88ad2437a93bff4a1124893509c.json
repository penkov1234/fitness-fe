{"ast":null,"code":"import _slicedToArray from \"/Users/petarpenkov/Documents/fitness-fe-master/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/petarpenkov/Documents/fitness-fe-master/app/src/module/components/register/SecondStep.js\";\nimport React, { useState } from 'react';\nimport { View, Text, Image } from 'react-native';\nimport { Button, TextField } from '@material-ui/core';\nimport Link from '@material-ui/core/Link';\nimport { passwordLoginAction, previousStepAction, registerUserAction } from '../../../redux/actions/auth.actions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FormControl from '@material-ui/core/FormControl';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Input from '@material-ui/core/Input';\nimport { stateIsLoaded } from '../../../services/stateHelpers';\nimport TitledGroupBox from '../TitledGroupBox';\nimport { headers, colors } from 'styles';\nimport bodyfatSvg from \"assets/icons-for-web/bodyfat.svg\";\nimport heightSvg from \"assets/icons-for-web/height.svg\";\nimport kgSvg from \"assets/icons-for-web/kg.svg\";\nexport default function FirstStep({\n  history\n}) {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        name = _useState2[0],\n        setName = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        lastName = _useState4[0],\n        setLastName = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        weight = _useState6[0],\n        setWeight = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        height = _useState8[0],\n        setHeight = _useState8[1];\n\n  const _useState9 = useState(''),\n        _useState10 = _slicedToArray(_useState9, 2),\n        bodyFat = _useState10[0],\n        setBodyFat = _useState10[1];\n\n  const _useState11 = useState(false),\n        _useState12 = _slicedToArray(_useState11, 2),\n        registerDone = _useState12[0],\n        setRegisterDone = _useState12[1];\n\n  const dispatch = useDispatch();\n  let firstStepData = useSelector(state => state.register.firstStepData).data.data;\n  let registerState = useSelector(state => state.register.status);\n  let authState = useSelector(state => state.auth);\n\n  const previousStep = () => {\n    dispatch(previousStepAction());\n  };\n\n  const finish = () => {\n    dispatch(registerUserAction(firstStepData, name, lastName, weight, height, bodyFat));\n  };\n\n  if (stateIsLoaded(registerState) && !registerDone) {\n    setRegisterDone(true);\n    dispatch(passwordLoginAction(firstStepData.username, firstStepData.password));\n  }\n\n  if (stateIsLoaded(authState) && authState.persisted) {\n    history.replace('/menu');\n  }\n\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    name: 'name',\n    variant: \"outlined\",\n    label: 'Name',\n    color: 'secondary',\n    onChange: event => setName(event.target.value),\n    value: name,\n    style: {\n      marginTop: 30,\n      marginLeft: 20,\n      marginRight: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    name: 'lastName',\n    variant: \"outlined\",\n    label: 'Last name',\n    color: 'secondary',\n    onChange: event => setLastName(event.target.value),\n    value: lastName,\n    style: {\n      marginTop: 30,\n      marginLeft: 20,\n      marginRight: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(TitledGroupBox, {\n    titleStyle: [headers.H4('black', 'Light')],\n    title: 'Body details',\n    style: {\n      margin: 20,\n      marginTop: 40\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      flexDirection: 'row',\n      alignItems: 'space-around',\n      marginTop: 25\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    style: {\n      flex: 1,\n      paddingLeft: 20,\n      paddingRight: 20,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(Image, {\n    source: kgSvg,\n    style: {\n      width: 50,\n      height: 50\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), React.createElement(FormHelperText, {\n    id: \"standard-weight-helper-text\",\n    style: {\n      paddingBottom: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Weight\"), React.createElement(Input, {\n    id: \"standard-adornment-weight\",\n    value: weight,\n    onChange: event => setWeight(+event.target.value ? +event.target.value : ''),\n    endAdornment: React.createElement(InputAdornment, {\n      position: \"end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Kg\"),\n    \"aria-describedby\": \"standard-weight-helper-text\",\n    inputProps: {\n      'aria-label': 'weight'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  })), React.createElement(FormControl, {\n    style: {\n      flex: 1,\n      paddingLeft: 20,\n      paddingRight: 20,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(Image, {\n    source: heightSvg,\n    style: {\n      width: 50,\n      height: 50\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), React.createElement(FormHelperText, {\n    id: \"standard-weight-helper-text\",\n    style: {\n      paddingBottom: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"Height\"), React.createElement(Input, {\n    id: \"standard-adornment-height\",\n    value: height,\n    onChange: event => setHeight(+event.target.value ? +event.target.value : ''),\n    endAdornment: React.createElement(InputAdornment, {\n      position: \"end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Cm\"),\n    \"aria-describedby\": \"standard-height-helper-text\",\n    inputProps: {\n      'aria-label': 'height'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  })), React.createElement(FormControl, {\n    style: {\n      flex: 1,\n      paddingLeft: 20,\n      paddingRight: 20,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(Image, {\n    source: bodyfatSvg,\n    style: {\n      width: 50,\n      height: 50\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }), React.createElement(FormHelperText, {\n    id: \"standard-weight-helper-text\",\n    style: {\n      paddingBottom: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"Body fat\"), React.createElement(Input, {\n    id: \"standard-adornment-body-fat\",\n    value: bodyFat,\n    onChange: event => setBodyFat(+event.target.value ? +event.target.value : ''),\n    endAdornment: React.createElement(InputAdornment, {\n      position: \"end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"%\"),\n    \"aria-describedby\": \"standard-body-fat-helper-text\",\n    inputProps: {\n      'aria-label': 'body-fat'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  })))), React.createElement(View, {\n    style: {\n      flex: 1,\n      flexDirection: 'row'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: 'secondary',\n    style: {\n      alignSelf: 'flex-start',\n      marginTop: 20\n    },\n    onClick: previousStep,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, \"Back\")), React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(Button, {\n    disabled: name.length < 1 || lastName.length < 1 || weight.length < 1 || height.length < 1 || bodyFat.length < 1,\n    variant: \"contained\",\n    color: 'secondary',\n    style: {\n      alignSelf: 'flex-end',\n      marginTop: 20\n    },\n    onClick: finish,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, \"finish\"))));\n}","map":{"version":3,"sources":["/Users/petarpenkov/Documents/fitness-fe-master/app/src/module/components/register/SecondStep.js"],"names":["React","useState","View","Text","Image","Button","TextField","Link","passwordLoginAction","previousStepAction","registerUserAction","useDispatch","useSelector","FormControl","makeStyles","InputAdornment","FormHelperText","Input","stateIsLoaded","TitledGroupBox","headers","colors","FirstStep","history","name","setName","lastName","setLastName","weight","setWeight","height","setHeight","bodyFat","setBodyFat","registerDone","setRegisterDone","dispatch","firstStepData","state","register","data","registerState","status","authState","auth","previousStep","finish","username","password","persisted","replace","event","target","value","marginTop","marginLeft","marginRight","H4","margin","flex","flexDirection","alignItems","paddingLeft","paddingRight","justifyContent","kgSvg","width","paddingBottom","heightSvg","bodyfatSvg","alignSelf","length"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, Image } from 'react-native';\nimport { Button, TextField } from '@material-ui/core';\nimport Link from '@material-ui/core/Link';\nimport { passwordLoginAction, previousStepAction, registerUserAction } from '../../../redux/actions/auth.actions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FormControl from '@material-ui/core/FormControl';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Input from '@material-ui/core/Input';\nimport { stateIsLoaded } from '../../../services/stateHelpers';\nimport TitledGroupBox from '../TitledGroupBox';\nimport { headers, colors } from 'styles';\nimport bodyfatSvg from 'assets/icons-for-web/bodyfat.svg';\nimport heightSvg from 'assets/icons-for-web/height.svg';\n\nimport kgSvg from 'assets/icons-for-web/kg.svg';\n\nexport default function FirstStep({ history }) {\n    const [name, setName] = useState('');\n    const [lastName, setLastName] = useState('');\n    const [weight, setWeight] = useState('');\n    const [height, setHeight] = useState('');\n    const [bodyFat, setBodyFat] = useState('');\n    const [registerDone, setRegisterDone] = useState(false);\n    const dispatch = useDispatch();\n    let firstStepData = useSelector(state => state.register.firstStepData).data.data;\n    let registerState = useSelector(state => state.register.status);\n    let authState = useSelector(state => state.auth);\n    const previousStep = () => {\n        dispatch(previousStepAction());\n    };\n    const finish = () => {\n        dispatch(registerUserAction(firstStepData, name, lastName, weight, height, bodyFat));\n    };\n\n    if (stateIsLoaded(registerState) && !registerDone) {\n        setRegisterDone(true);\n        dispatch(passwordLoginAction(firstStepData.username, firstStepData.password));\n    }\n    if (stateIsLoaded(authState) && authState.persisted) {\n        history.replace('/menu');\n    }\n    return (\n        <View>\n            <TextField\n                name={'name'}\n                variant=\"outlined\"\n                label={'Name'}\n                color={'secondary'}\n                onChange={event => setName(event.target.value)}\n                value={name}\n                style={{ marginTop: 30, marginLeft: 20, marginRight: 20 }}\n            ></TextField>\n            <TextField\n                name={'lastName'}\n                variant=\"outlined\"\n                label={'Last name'}\n                color={'secondary'}\n                onChange={event => setLastName(event.target.value)}\n                value={lastName}\n                style={{ marginTop: 30, marginLeft: 20, marginRight: 20 }}\n            ></TextField>\n\n            <TitledGroupBox titleStyle={[headers.H4('black', 'Light')]} title={'Body details'} style={{ margin: 20, marginTop: 40 }}>\n                <View style={{ flex: 1, flexDirection: 'row', alignItems: 'space-around', marginTop: 25 }}>\n                    <FormControl style={{ flex: 1, paddingLeft: 20, paddingRight: 20, justifyContent: 'center', alignItems: 'center' }}>\n                        <Image source={kgSvg} style={{ width: 50, height: 50 }}></Image>\n                        <FormHelperText id=\"standard-weight-helper-text\" style={{ paddingBottom: 10 }}>\n                            Weight\n                        </FormHelperText>\n                        <Input\n                            id=\"standard-adornment-weight\"\n                            value={weight}\n                            onChange={event => setWeight(+event.target.value ? +event.target.value : '')}\n                            endAdornment={<InputAdornment position=\"end\">Kg</InputAdornment>}\n                            aria-describedby=\"standard-weight-helper-text\"\n                            inputProps={{\n                                'aria-label': 'weight',\n                            }}\n                        />\n                    </FormControl>\n                    <FormControl style={{ flex: 1, paddingLeft: 20, paddingRight: 20, justifyContent: 'center', alignItems: 'center' }}>\n                        <Image source={heightSvg} style={{ width: 50, height: 50 }}></Image>\n                        <FormHelperText id=\"standard-weight-helper-text\" style={{ paddingBottom: 10 }}>\n                            Height\n                        </FormHelperText>\n                        <Input\n                            id=\"standard-adornment-height\"\n                            value={height}\n                            onChange={event => setHeight(+event.target.value ? +event.target.value : '')}\n                            endAdornment={<InputAdornment position=\"end\">Cm</InputAdornment>}\n                            aria-describedby=\"standard-height-helper-text\"\n                            inputProps={{\n                                'aria-label': 'height',\n                            }}\n                        />\n                    </FormControl>\n                    <FormControl style={{ flex: 1, paddingLeft: 20, paddingRight: 20, justifyContent: 'center', alignItems: 'center' }}>\n                        <Image source={bodyfatSvg} style={{ width: 50, height: 50 }}></Image>\n                        <FormHelperText id=\"standard-weight-helper-text\" style={{ paddingBottom: 10 }}>\n                            Body fat\n                        </FormHelperText>\n                        <Input\n                            id=\"standard-adornment-body-fat\"\n                            value={bodyFat}\n                            onChange={event => setBodyFat(+event.target.value ? +event.target.value : '')}\n                            endAdornment={<InputAdornment position=\"end\">%</InputAdornment>}\n                            aria-describedby=\"standard-body-fat-helper-text\"\n                            inputProps={{\n                                'aria-label': 'body-fat',\n                            }}\n                        />\n                    </FormControl>\n                </View>\n            </TitledGroupBox>\n\n            <View\n                style={{\n                    flex: 1,\n                    flexDirection: 'row',\n                }}\n            >\n                <View style={{ flex: 1 }}>\n                    <Button variant=\"contained\" color={'secondary'} style={{ alignSelf: 'flex-start', marginTop: 20 }} onClick={previousStep}>\n                        Back\n                    </Button>\n                </View>\n                <View style={{ flex: 1 }}>\n                    <Button\n                        disabled={name.length < 1 || lastName.length < 1 || weight.length < 1 || height.length < 1 || bodyFat.length < 1}\n                        variant=\"contained\"\n                        color={'secondary'}\n                        style={{ alignSelf: 'flex-end', marginTop: 20 }}\n                        onClick={finish}\n                    >\n                        finish\n                    </Button>\n                </View>\n            </View>\n        </View>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}
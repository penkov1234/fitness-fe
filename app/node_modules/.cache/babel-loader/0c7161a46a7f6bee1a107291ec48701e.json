{"ast":null,"code":"import _slicedToArray from \"/Users/petarpenkov/Documents/fitness-fe-master/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/petarpenkov/Documents/fitness-fe-master/app/src/module/components/modals/TextAndPictureModal.js\";\nimport React, { useState, useEffect } from 'react';\nimport { View, Text, ScrollView, ImageBackground, Button, Dimensions, TouchableOpacity, Image } from 'react-native';\nimport { colors, headers, basicStyles } from 'styles';\nimport TitledGroupBox from '../TitledGroupBox';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { workoutPlanMock } from 'static/mockObjects';\nimport WhiteOutlinedButton from 'module/components/buttons/WhiteOutlinedButton';\nimport CloseButton from 'module/components/buttons/CloseButton';\nimport CustomInput from '../CustomInput';\nimport ModalTitle from 'module/components/modals/components/ModalTitle';\nimport StandardButton from 'module/components/buttons/StandardButton';\nimport { updateWorkout } from 'redux/actions/data.actions';\nimport { useDispatch } from 'react-redux';\nimport { dateToIsoConverter } from 'services/stringHelpers';\nimport checkboxPNG from 'assets/icons-for-web/checkbox.png';\nimport TextAndPicture from 'module/components/TextAndPicture';\nexport default function TextAndPictureModal({\n  history,\n  modalOpen,\n  setModalOpen,\n  title,\n  text,\n  imageSource\n}) {\n  // console.log(text);\n  // console.log(imageSource);\n  const window = Dimensions.get('window');\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        finishedWorkout = _useState2[0],\n        setFinishedWorkout = _useState2[1];\n\n  const _useState3 = useState({\n    window\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        dimensions = _useState4[0],\n        setDimensions = _useState4[1];\n\n  const _useState5 = useState({\n    hours: 0,\n    min: 0\n  }),\n        _useState6 = _slicedToArray(_useState5, 2),\n        timeEstimated = _useState6[0],\n        setTimeEstimated = _useState6[1]; // console.log(detailsModal);\n\n\n  const onChange = ({\n    window,\n    screen\n  }) => {\n    setDimensions({\n      window\n    });\n  };\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    Dimensions.addEventListener('change', onChange);\n    return () => {\n      Dimensions.removeEventListener('change', onChange);\n    };\n  });\n  return React.createElement(ImageBackground, {\n    style: {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n      backgroundImage: `linear-gradient(to bottom right, ${colors.themePrimary(100)}, ${colors.themePrimary(50)}, ${colors.themePrimary(70)}, ${colors.themeSecoundary(50)},  ${colors.themeSecoundary(100)} )`\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(TouchableOpacity, {\n    onPress: () => {\n      setModalOpen(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(ImageBackground, {\n    style: {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  })), React.createElement(View, {\n    style: {\n      top: dimensions.window.height * 0.1,\n      marginLeft: dimensions.window.width * 0.33,\n      marginRight: dimensions.window.width * 0.33,\n      height: dimensions.window.height * 0.8,\n      backgroundColor: 'white',\n      boxShadow: '-10px 12px 11px -1px rgba(0,0,0,0.2)',\n      overflow: 'auto'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(View, {\n    style: {\n      position: 'absolute',\n      zIndex: 120,\n      width: 55,\n      height: 55,\n      right: 0\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(CloseButton, {\n    title: \"close\",\n    onPress: event => {\n      setModalOpen(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  })), React.createElement(ModalTitle, {\n    title: 'Exercise details',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), React.createElement(TextAndPicture, {\n    text: text,\n    imageSource: imageSource,\n    title: title,\n    textStyle: [headers.H4()],\n    titleStyle: [headers.H2()],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["/Users/petarpenkov/Documents/fitness-fe-master/app/src/module/components/modals/TextAndPictureModal.js"],"names":["React","useState","useEffect","View","Text","ScrollView","ImageBackground","Button","Dimensions","TouchableOpacity","Image","colors","headers","basicStyles","TitledGroupBox","Checkbox","workoutPlanMock","WhiteOutlinedButton","CloseButton","CustomInput","ModalTitle","StandardButton","updateWorkout","useDispatch","dateToIsoConverter","checkboxPNG","TextAndPicture","TextAndPictureModal","history","modalOpen","setModalOpen","title","text","imageSource","window","get","finishedWorkout","setFinishedWorkout","dimensions","setDimensions","hours","min","timeEstimated","setTimeEstimated","onChange","screen","dispatch","addEventListener","removeEventListener","position","top","left","width","height","backgroundImage","themePrimary","themeSecoundary","marginLeft","marginRight","backgroundColor","boxShadow","overflow","zIndex","right","event","H4","H2"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, Text, ScrollView, ImageBackground, Button, Dimensions, TouchableOpacity, Image } from 'react-native';\nimport { colors, headers, basicStyles } from 'styles';\nimport TitledGroupBox from '../TitledGroupBox';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { workoutPlanMock } from 'static/mockObjects';\nimport WhiteOutlinedButton from 'module/components/buttons/WhiteOutlinedButton';\nimport CloseButton from 'module/components/buttons/CloseButton';\n\nimport CustomInput from '../CustomInput';\nimport ModalTitle from 'module/components/modals/components/ModalTitle';\nimport StandardButton from 'module/components/buttons/StandardButton';\nimport { updateWorkout } from 'redux/actions/data.actions';\nimport { useDispatch } from 'react-redux';\nimport { dateToIsoConverter } from 'services/stringHelpers';\nimport checkboxPNG from 'assets/icons-for-web/checkbox.png';\nimport TextAndPicture from 'module/components/TextAndPicture';\nexport default function TextAndPictureModal({ history, modalOpen, setModalOpen, title, text, imageSource }) {\n    // console.log(text);\n    // console.log(imageSource);\n    const window = Dimensions.get('window');\n    const [finishedWorkout, setFinishedWorkout] = useState(false);\n    const [dimensions, setDimensions] = useState({ window });\n    const [timeEstimated, setTimeEstimated] = useState({\n        hours: 0,\n        min: 0,\n    });\n    // console.log(detailsModal);\n    const onChange = ({ window, screen }) => {\n        setDimensions({ window });\n    };\n    const dispatch = useDispatch();\n    useEffect(() => {\n        Dimensions.addEventListener('change', onChange);\n        return () => {\n            Dimensions.removeEventListener('change', onChange);\n        };\n    });\n    return (\n        <ImageBackground\n            style={{\n                position: 'fixed',\n                top: 0,\n                left: 0,\n                width: '100%',\n                height: '100%',\n                backgroundImage: `linear-gradient(to bottom right, ${colors.themePrimary(100)}, ${colors.themePrimary(50)}, ${colors.themePrimary(\n                    70\n                )}, ${colors.themeSecoundary(50)},  ${colors.themeSecoundary(100)} )`,\n            }}\n        >\n            <TouchableOpacity\n                onPress={() => {\n                    setModalOpen(false);\n                }}\n            >\n                <ImageBackground style={{ position: 'fixed', top: 0, left: 0, width: '100%', height: '100%' }} />\n            </TouchableOpacity>\n\n            <View\n                style={{\n                    top: dimensions.window.height * 0.1,\n                    marginLeft: dimensions.window.width * 0.33,\n                    marginRight: dimensions.window.width * 0.33,\n                    height: dimensions.window.height * 0.8,\n                    backgroundColor: 'white',\n                    boxShadow: '-10px 12px 11px -1px rgba(0,0,0,0.2)',\n                    overflow: 'auto',\n                }}\n            >\n                <View style={{ position: 'absolute', zIndex: 120, width: 55, height: 55, right: 0 }}>\n                    <CloseButton\n                        title=\"close\"\n                        onPress={event => {\n                            setModalOpen(false);\n                        }}\n                    ></CloseButton>\n                </View>\n\n                <ModalTitle title={'Exercise details'}></ModalTitle>\n                <TextAndPicture text={text} imageSource={imageSource} title={title} textStyle={[headers.H4()]} titleStyle={[headers.H2()]} />\n            </View>\n        </ImageBackground>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}